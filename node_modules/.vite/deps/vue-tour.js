import {
  __commonJS
} from "./chunk-Y2F7D3TJ.js";

// node_modules/vue-tour/dist/vue-tour.umd.js
var require_vue_tour_umd = __commonJS({
  "node_modules/vue-tour/dist/vue-tour.umd.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory();
      else if (typeof define === "function" && define.amd)
        define([], factory);
      else if (typeof exports === "object")
        exports["vue-tour"] = factory();
      else
        root["vue-tour"] = factory();
    })(typeof self !== "undefined" ? self : exports, function() {
      return (
        /******/
        function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) {
              return installedModules[moduleId].exports;
            }
            var module2 = installedModules[moduleId] = {
              /******/
              i: moduleId,
              /******/
              l: false,
              /******/
              exports: {}
              /******/
            };
            modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
            module2.l = true;
            return module2.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.d = function(exports2, name, getter) {
            if (!__webpack_require__.o(exports2, name)) {
              Object.defineProperty(exports2, name, { enumerable: true, get: getter });
            }
          };
          __webpack_require__.r = function(exports2) {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
              Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
            }
            Object.defineProperty(exports2, "__esModule", { value: true });
          };
          __webpack_require__.t = function(value, mode) {
            if (mode & 1)
              value = __webpack_require__(value);
            if (mode & 8)
              return value;
            if (mode & 4 && typeof value === "object" && value && value.__esModule)
              return value;
            var ns = /* @__PURE__ */ Object.create(null);
            __webpack_require__.r(ns);
            Object.defineProperty(ns, "default", { enumerable: true, value });
            if (mode & 2 && typeof value != "string")
              for (var key in value)
                __webpack_require__.d(ns, key, (function(key2) {
                  return value[key2];
                }).bind(null, key));
            return ns;
          };
          __webpack_require__.n = function(module2) {
            var getter = module2 && module2.__esModule ? (
              /******/
              function getDefault() {
                return module2["default"];
              }
            ) : (
              /******/
              function getModuleExports() {
                return module2;
              }
            );
            __webpack_require__.d(getter, "a", getter);
            return getter;
          };
          __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          __webpack_require__.p = "";
          return __webpack_require__(__webpack_require__.s = "fb15");
        }({
          /***/
          "00ee": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var wellKnownSymbol = __webpack_require__("b622");
              var TO_STRING_TAG = wellKnownSymbol("toStringTag");
              var test = {};
              test[TO_STRING_TAG] = "z";
              module2.exports = String(test) === "[object z]";
            }
          ),
          /***/
          "0366": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var aFunction = __webpack_require__("1c0b");
              module2.exports = function(fn, that, length) {
                aFunction(fn);
                if (that === void 0)
                  return fn;
                switch (length) {
                  case 0:
                    return function() {
                      return fn.call(that);
                    };
                  case 1:
                    return function(a) {
                      return fn.call(that, a);
                    };
                  case 2:
                    return function(a, b) {
                      return fn.call(that, a, b);
                    };
                  case 3:
                    return function(a, b, c) {
                      return fn.call(that, a, b, c);
                    };
                }
                return function() {
                  return fn.apply(that, arguments);
                };
              };
            }
          ),
          /***/
          "057f": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var toIndexedObject = __webpack_require__("fc6a");
              var nativeGetOwnPropertyNames = __webpack_require__("241c").f;
              var toString = {}.toString;
              var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
              var getWindowNames = function(it) {
                try {
                  return nativeGetOwnPropertyNames(it);
                } catch (error) {
                  return windowNames.slice();
                }
              };
              module2.exports.f = function getOwnPropertyNames(it) {
                return windowNames && toString.call(it) == "[object Window]" ? getWindowNames(it) : nativeGetOwnPropertyNames(toIndexedObject(it));
              };
            }
          ),
          /***/
          "06cf": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var DESCRIPTORS = __webpack_require__("83ab");
              var propertyIsEnumerableModule = __webpack_require__("d1e7");
              var createPropertyDescriptor = __webpack_require__("5c6c");
              var toIndexedObject = __webpack_require__("fc6a");
              var toPrimitive = __webpack_require__("c04e");
              var has = __webpack_require__("5135");
              var IE8_DOM_DEFINE = __webpack_require__("0cfb");
              var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
              exports2.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
                O = toIndexedObject(O);
                P = toPrimitive(P, true);
                if (IE8_DOM_DEFINE)
                  try {
                    return nativeGetOwnPropertyDescriptor(O, P);
                  } catch (error) {
                  }
                if (has(O, P))
                  return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
              };
            }
          ),
          /***/
          "07e8": (
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VTour_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("2f28");
              var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VTour_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VTour_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__);
            }
          ),
          /***/
          "0cb2": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var toObject = __webpack_require__("7b0b");
              var floor = Math.floor;
              var replace = "".replace;
              var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
              var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;
              module2.exports = function(matched, str, position, captures, namedCaptures, replacement) {
                var tailPos = position + matched.length;
                var m = captures.length;
                var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
                if (namedCaptures !== void 0) {
                  namedCaptures = toObject(namedCaptures);
                  symbols = SUBSTITUTION_SYMBOLS;
                }
                return replace.call(replacement, symbols, function(match, ch) {
                  var capture;
                  switch (ch.charAt(0)) {
                    case "$":
                      return "$";
                    case "&":
                      return matched;
                    case "`":
                      return str.slice(0, position);
                    case "'":
                      return str.slice(tailPos);
                    case "<":
                      capture = namedCaptures[ch.slice(1, -1)];
                      break;
                    default:
                      var n = +ch;
                      if (n === 0)
                        return match;
                      if (n > m) {
                        var f = floor(n / 10);
                        if (f === 0)
                          return match;
                        if (f <= m)
                          return captures[f - 1] === void 0 ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
                        return match;
                      }
                      capture = captures[n - 1];
                  }
                  return capture === void 0 ? "" : capture;
                });
              };
            }
          ),
          /***/
          "0cfb": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var DESCRIPTORS = __webpack_require__("83ab");
              var fails = __webpack_require__("d039");
              var createElement = __webpack_require__("cc12");
              module2.exports = !DESCRIPTORS && !fails(function() {
                return Object.defineProperty(createElement("div"), "a", {
                  get: function() {
                    return 7;
                  }
                }).a != 7;
              });
            }
          ),
          /***/
          "0fc8": (
            /***/
            function(module2, exports2, __webpack_require__) {
            }
          ),
          /***/
          "14c3": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var classof = __webpack_require__("c6b6");
              var regexpExec = __webpack_require__("9263");
              module2.exports = function(R, S) {
                var exec = R.exec;
                if (typeof exec === "function") {
                  var result = exec.call(R, S);
                  if (typeof result !== "object") {
                    throw TypeError("RegExp exec method returned something other than an Object or null");
                  }
                  return result;
                }
                if (classof(R) !== "RegExp") {
                  throw TypeError("RegExp#exec called on incompatible receiver");
                }
                return regexpExec.call(R, S);
              };
            }
          ),
          /***/
          "159b": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var DOMIterables = __webpack_require__("fdbc");
              var forEach = __webpack_require__("17c2");
              var createNonEnumerableProperty = __webpack_require__("9112");
              for (var COLLECTION_NAME in DOMIterables) {
                var Collection = global[COLLECTION_NAME];
                var CollectionPrototype = Collection && Collection.prototype;
                if (CollectionPrototype && CollectionPrototype.forEach !== forEach)
                  try {
                    createNonEnumerableProperty(CollectionPrototype, "forEach", forEach);
                  } catch (error) {
                    CollectionPrototype.forEach = forEach;
                  }
              }
            }
          ),
          /***/
          "17c2": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $forEach = __webpack_require__("b727").forEach;
              var arrayMethodIsStrict = __webpack_require__("a640");
              var STRICT_METHOD = arrayMethodIsStrict("forEach");
              module2.exports = !STRICT_METHOD ? function forEach(callbackfn) {
                return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              } : [].forEach;
            }
          ),
          /***/
          "19aa": (
            /***/
            function(module2, exports2) {
              module2.exports = function(it, Constructor, name) {
                if (!(it instanceof Constructor)) {
                  throw TypeError("Incorrect " + (name ? name + " " : "") + "invocation");
                }
                return it;
              };
            }
          ),
          /***/
          "1be4": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var getBuiltIn = __webpack_require__("d066");
              module2.exports = getBuiltIn("document", "documentElement");
            }
          ),
          /***/
          "1c0b": (
            /***/
            function(module2, exports2) {
              module2.exports = function(it) {
                if (typeof it != "function") {
                  throw TypeError(String(it) + " is not a function");
                }
                return it;
              };
            }
          ),
          /***/
          "1c7e": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var wellKnownSymbol = __webpack_require__("b622");
              var ITERATOR = wellKnownSymbol("iterator");
              var SAFE_CLOSING = false;
              try {
                var called = 0;
                var iteratorWithReturn = {
                  next: function() {
                    return { done: !!called++ };
                  },
                  "return": function() {
                    SAFE_CLOSING = true;
                  }
                };
                iteratorWithReturn[ITERATOR] = function() {
                  return this;
                };
                Array.from(iteratorWithReturn, function() {
                  throw 2;
                });
              } catch (error) {
              }
              module2.exports = function(exec, SKIP_CLOSING) {
                if (!SKIP_CLOSING && !SAFE_CLOSING)
                  return false;
                var ITERATION_SUPPORT = false;
                try {
                  var object = {};
                  object[ITERATOR] = function() {
                    return {
                      next: function() {
                        return { done: ITERATION_SUPPORT = true };
                      }
                    };
                  };
                  exec(object);
                } catch (error) {
                }
                return ITERATION_SUPPORT;
              };
            }
          ),
          /***/
          "1cdc": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var userAgent = __webpack_require__("342f");
              module2.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);
            }
          ),
          /***/
          "1d80": (
            /***/
            function(module2, exports2) {
              module2.exports = function(it) {
                if (it == void 0)
                  throw TypeError("Can't call method on " + it);
                return it;
              };
            }
          ),
          /***/
          "1dde": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var fails = __webpack_require__("d039");
              var wellKnownSymbol = __webpack_require__("b622");
              var V8_VERSION = __webpack_require__("2d00");
              var SPECIES = wellKnownSymbol("species");
              module2.exports = function(METHOD_NAME) {
                return V8_VERSION >= 51 || !fails(function() {
                  var array = [];
                  var constructor = array.constructor = {};
                  constructor[SPECIES] = function() {
                    return { foo: 1 };
                  };
                  return array[METHOD_NAME](Boolean).foo !== 1;
                });
              };
            }
          ),
          /***/
          "2266": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var anObject = __webpack_require__("825a");
              var isArrayIteratorMethod = __webpack_require__("e95a");
              var toLength = __webpack_require__("50c4");
              var bind = __webpack_require__("0366");
              var getIteratorMethod = __webpack_require__("35a1");
              var iteratorClose = __webpack_require__("2a62");
              var Result = function(stopped, result) {
                this.stopped = stopped;
                this.result = result;
              };
              module2.exports = function(iterable, unboundFunction, options) {
                var that = options && options.that;
                var AS_ENTRIES = !!(options && options.AS_ENTRIES);
                var IS_ITERATOR = !!(options && options.IS_ITERATOR);
                var INTERRUPTED = !!(options && options.INTERRUPTED);
                var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
                var iterator, iterFn, index, length, result, next, step;
                var stop = function(condition) {
                  if (iterator)
                    iteratorClose(iterator);
                  return new Result(true, condition);
                };
                var callFn = function(value) {
                  if (AS_ENTRIES) {
                    anObject(value);
                    return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
                  }
                  return INTERRUPTED ? fn(value, stop) : fn(value);
                };
                if (IS_ITERATOR) {
                  iterator = iterable;
                } else {
                  iterFn = getIteratorMethod(iterable);
                  if (typeof iterFn != "function")
                    throw TypeError("Target is not iterable");
                  if (isArrayIteratorMethod(iterFn)) {
                    for (index = 0, length = toLength(iterable.length); length > index; index++) {
                      result = callFn(iterable[index]);
                      if (result && result instanceof Result)
                        return result;
                    }
                    return new Result(false);
                  }
                  iterator = iterFn.call(iterable);
                }
                next = iterator.next;
                while (!(step = next.call(iterator)).done) {
                  try {
                    result = callFn(step.value);
                  } catch (error) {
                    iteratorClose(iterator);
                    throw error;
                  }
                  if (typeof result == "object" && result && result instanceof Result)
                    return result;
                }
                return new Result(false);
              };
            }
          ),
          /***/
          "23cb": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var toInteger = __webpack_require__("a691");
              var max = Math.max;
              var min = Math.min;
              module2.exports = function(index, length) {
                var integer = toInteger(index);
                return integer < 0 ? max(integer + length, 0) : min(integer, length);
              };
            }
          ),
          /***/
          "23e7": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
              var createNonEnumerableProperty = __webpack_require__("9112");
              var redefine = __webpack_require__("6eeb");
              var setGlobal = __webpack_require__("ce4e");
              var copyConstructorProperties = __webpack_require__("e893");
              var isForced = __webpack_require__("94ca");
              module2.exports = function(options, source) {
                var TARGET = options.target;
                var GLOBAL = options.global;
                var STATIC = options.stat;
                var FORCED, target, key, targetProperty, sourceProperty, descriptor;
                if (GLOBAL) {
                  target = global;
                } else if (STATIC) {
                  target = global[TARGET] || setGlobal(TARGET, {});
                } else {
                  target = (global[TARGET] || {}).prototype;
                }
                if (target)
                  for (key in source) {
                    sourceProperty = source[key];
                    if (options.noTargetGet) {
                      descriptor = getOwnPropertyDescriptor(target, key);
                      targetProperty = descriptor && descriptor.value;
                    } else
                      targetProperty = target[key];
                    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
                    if (!FORCED && targetProperty !== void 0) {
                      if (typeof sourceProperty === typeof targetProperty)
                        continue;
                      copyConstructorProperties(sourceProperty, targetProperty);
                    }
                    if (options.sham || targetProperty && targetProperty.sham) {
                      createNonEnumerableProperty(sourceProperty, "sham", true);
                    }
                    redefine(target, key, sourceProperty, options);
                  }
              };
            }
          ),
          /***/
          "241c": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var internalObjectKeys = __webpack_require__("ca84");
              var enumBugKeys = __webpack_require__("7839");
              var hiddenKeys = enumBugKeys.concat("length", "prototype");
              exports2.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
                return internalObjectKeys(O, hiddenKeys);
              };
            }
          ),
          /***/
          "2532": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $ = __webpack_require__("23e7");
              var notARegExp = __webpack_require__("5a34");
              var requireObjectCoercible = __webpack_require__("1d80");
              var correctIsRegExpLogic = __webpack_require__("ab13");
              $({ target: "String", proto: true, forced: !correctIsRegExpLogic("includes") }, {
                includes: function includes(searchString) {
                  return !!~String(requireObjectCoercible(this)).indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          "2626": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var getBuiltIn = __webpack_require__("d066");
              var definePropertyModule = __webpack_require__("9bf2");
              var wellKnownSymbol = __webpack_require__("b622");
              var DESCRIPTORS = __webpack_require__("83ab");
              var SPECIES = wellKnownSymbol("species");
              module2.exports = function(CONSTRUCTOR_NAME) {
                var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
                var defineProperty = definePropertyModule.f;
                if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
                  defineProperty(Constructor, SPECIES, {
                    configurable: true,
                    get: function() {
                      return this;
                    }
                  });
                }
              };
            }
          ),
          /***/
          "2a62": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var anObject = __webpack_require__("825a");
              module2.exports = function(iterator) {
                var returnMethod = iterator["return"];
                if (returnMethod !== void 0) {
                  return anObject(returnMethod.call(iterator)).value;
                }
              };
            }
          ),
          /***/
          "2cf4": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var fails = __webpack_require__("d039");
              var bind = __webpack_require__("0366");
              var html = __webpack_require__("1be4");
              var createElement = __webpack_require__("cc12");
              var IS_IOS = __webpack_require__("1cdc");
              var IS_NODE = __webpack_require__("605d");
              var location = global.location;
              var set = global.setImmediate;
              var clear = global.clearImmediate;
              var process = global.process;
              var MessageChannel = global.MessageChannel;
              var Dispatch = global.Dispatch;
              var counter = 0;
              var queue = {};
              var ONREADYSTATECHANGE = "onreadystatechange";
              var defer, channel, port;
              var run = function(id) {
                if (queue.hasOwnProperty(id)) {
                  var fn = queue[id];
                  delete queue[id];
                  fn();
                }
              };
              var runner = function(id) {
                return function() {
                  run(id);
                };
              };
              var listener = function(event) {
                run(event.data);
              };
              var post = function(id) {
                global.postMessage(id + "", location.protocol + "//" + location.host);
              };
              if (!set || !clear) {
                set = function setImmediate(fn) {
                  var args = [];
                  var i = 1;
                  while (arguments.length > i)
                    args.push(arguments[i++]);
                  queue[++counter] = function() {
                    (typeof fn == "function" ? fn : Function(fn)).apply(void 0, args);
                  };
                  defer(counter);
                  return counter;
                };
                clear = function clearImmediate(id) {
                  delete queue[id];
                };
                if (IS_NODE) {
                  defer = function(id) {
                    process.nextTick(runner(id));
                  };
                } else if (Dispatch && Dispatch.now) {
                  defer = function(id) {
                    Dispatch.now(runner(id));
                  };
                } else if (MessageChannel && !IS_IOS) {
                  channel = new MessageChannel();
                  port = channel.port2;
                  channel.port1.onmessage = listener;
                  defer = bind(port.postMessage, port, 1);
                } else if (global.addEventListener && typeof postMessage == "function" && !global.importScripts && location && location.protocol !== "file:" && !fails(post)) {
                  defer = post;
                  global.addEventListener("message", listener, false);
                } else if (ONREADYSTATECHANGE in createElement("script")) {
                  defer = function(id) {
                    html.appendChild(createElement("script"))[ONREADYSTATECHANGE] = function() {
                      html.removeChild(this);
                      run(id);
                    };
                  };
                } else {
                  defer = function(id) {
                    setTimeout(runner(id), 0);
                  };
                }
              }
              module2.exports = {
                set,
                clear
              };
            }
          ),
          /***/
          "2d00": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var userAgent = __webpack_require__("342f");
              var process = global.process;
              var versions = process && process.versions;
              var v8 = versions && versions.v8;
              var match, version;
              if (v8) {
                match = v8.split(".");
                version = match[0] + match[1];
              } else if (userAgent) {
                match = userAgent.match(/Edge\/(\d+)/);
                if (!match || match[1] >= 74) {
                  match = userAgent.match(/Chrome\/(\d+)/);
                  if (match)
                    version = match[1];
                }
              }
              module2.exports = version && +version;
            }
          ),
          /***/
          "2f28": (
            /***/
            function(module2, exports2, __webpack_require__) {
            }
          ),
          /***/
          "342f": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var getBuiltIn = __webpack_require__("d066");
              module2.exports = getBuiltIn("navigator", "userAgent") || "";
            }
          ),
          /***/
          "35a1": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var classof = __webpack_require__("f5df");
              var Iterators = __webpack_require__("3f8c");
              var wellKnownSymbol = __webpack_require__("b622");
              var ITERATOR = wellKnownSymbol("iterator");
              module2.exports = function(it) {
                if (it != void 0)
                  return it[ITERATOR] || it["@@iterator"] || Iterators[classof(it)];
              };
            }
          ),
          /***/
          "37e8": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var DESCRIPTORS = __webpack_require__("83ab");
              var definePropertyModule = __webpack_require__("9bf2");
              var anObject = __webpack_require__("825a");
              var objectKeys = __webpack_require__("df75");
              module2.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
                anObject(O);
                var keys = objectKeys(Properties);
                var length = keys.length;
                var index = 0;
                var key;
                while (length > index)
                  definePropertyModule.f(O, key = keys[index++], Properties[key]);
                return O;
              };
            }
          ),
          /***/
          "3f8c": (
            /***/
            function(module2, exports2) {
              module2.exports = {};
            }
          ),
          /***/
          "428f": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              module2.exports = global;
            }
          ),
          /***/
          "44ad": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var fails = __webpack_require__("d039");
              var classof = __webpack_require__("c6b6");
              var split = "".split;
              module2.exports = fails(function() {
                return !Object("z").propertyIsEnumerable(0);
              }) ? function(it) {
                return classof(it) == "String" ? split.call(it, "") : Object(it);
              } : Object;
            }
          ),
          /***/
          "44d2": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var wellKnownSymbol = __webpack_require__("b622");
              var create = __webpack_require__("7c73");
              var definePropertyModule = __webpack_require__("9bf2");
              var UNSCOPABLES = wellKnownSymbol("unscopables");
              var ArrayPrototype = Array.prototype;
              if (ArrayPrototype[UNSCOPABLES] == void 0) {
                definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
                  configurable: true,
                  value: create(null)
                });
              }
              module2.exports = function(key) {
                ArrayPrototype[UNSCOPABLES][key] = true;
              };
            }
          ),
          /***/
          "44de": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              module2.exports = function(a, b) {
                var console2 = global.console;
                if (console2 && console2.error) {
                  arguments.length === 1 ? console2.error(a) : console2.error(a, b);
                }
              };
            }
          ),
          /***/
          "44e7": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var isObject = __webpack_require__("861d");
              var classof = __webpack_require__("c6b6");
              var wellKnownSymbol = __webpack_require__("b622");
              var MATCH = wellKnownSymbol("match");
              module2.exports = function(it) {
                var isRegExp;
                return isObject(it) && ((isRegExp = it[MATCH]) !== void 0 ? !!isRegExp : classof(it) == "RegExp");
              };
            }
          ),
          /***/
          "4840": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var anObject = __webpack_require__("825a");
              var aFunction = __webpack_require__("1c0b");
              var wellKnownSymbol = __webpack_require__("b622");
              var SPECIES = wellKnownSymbol("species");
              module2.exports = function(O, defaultConstructor) {
                var C = anObject(O).constructor;
                var S;
                return C === void 0 || (S = anObject(C)[SPECIES]) == void 0 ? defaultConstructor : aFunction(S);
              };
            }
          ),
          /***/
          "4930": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var IS_NODE = __webpack_require__("605d");
              var V8_VERSION = __webpack_require__("2d00");
              var fails = __webpack_require__("d039");
              module2.exports = !!Object.getOwnPropertySymbols && !fails(function() {
                return !Symbol.sham && // Chrome 38 Symbol has incorrect toString conversion
                // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
                (IS_NODE ? V8_VERSION === 38 : V8_VERSION > 37 && V8_VERSION < 41);
              });
            }
          ),
          /***/
          "4d64": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var toIndexedObject = __webpack_require__("fc6a");
              var toLength = __webpack_require__("50c4");
              var toAbsoluteIndex = __webpack_require__("23cb");
              var createMethod = function(IS_INCLUDES) {
                return function($this, el, fromIndex) {
                  var O = toIndexedObject($this);
                  var length = toLength(O.length);
                  var index = toAbsoluteIndex(fromIndex, length);
                  var value;
                  if (IS_INCLUDES && el != el)
                    while (length > index) {
                      value = O[index++];
                      if (value != value)
                        return true;
                    }
                  else
                    for (; length > index; index++) {
                      if ((IS_INCLUDES || index in O) && O[index] === el)
                        return IS_INCLUDES || index || 0;
                    }
                  return !IS_INCLUDES && -1;
                };
              };
              module2.exports = {
                // `Array.prototype.includes` method
                // https://tc39.es/ecma262/#sec-array.prototype.includes
                includes: createMethod(true),
                // `Array.prototype.indexOf` method
                // https://tc39.es/ecma262/#sec-array.prototype.indexof
                indexOf: createMethod(false)
              };
            }
          ),
          /***/
          "4de4": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $ = __webpack_require__("23e7");
              var $filter = __webpack_require__("b727").filter;
              var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
              var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("filter");
              $({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
                filter: function filter(callbackfn) {
                  return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          "50c4": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var toInteger = __webpack_require__("a691");
              var min = Math.min;
              module2.exports = function(argument) {
                return argument > 0 ? min(toInteger(argument), 9007199254740991) : 0;
              };
            }
          ),
          /***/
          "5135": (
            /***/
            function(module2, exports2) {
              var hasOwnProperty = {}.hasOwnProperty;
              module2.exports = function(it, key) {
                return hasOwnProperty.call(it, key);
              };
            }
          ),
          /***/
          "5319": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
              var anObject = __webpack_require__("825a");
              var toLength = __webpack_require__("50c4");
              var toInteger = __webpack_require__("a691");
              var requireObjectCoercible = __webpack_require__("1d80");
              var advanceStringIndex = __webpack_require__("8aa5");
              var getSubstitution = __webpack_require__("0cb2");
              var regExpExec = __webpack_require__("14c3");
              var max = Math.max;
              var min = Math.min;
              var maybeToString = function(it) {
                return it === void 0 ? it : String(it);
              };
              fixRegExpWellKnownSymbolLogic("replace", 2, function(REPLACE, nativeReplace, maybeCallNative, reason) {
                var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
                var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
                var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? "$" : "$0";
                return [
                  // `String.prototype.replace` method
                  // https://tc39.es/ecma262/#sec-string.prototype.replace
                  function replace(searchValue, replaceValue) {
                    var O = requireObjectCoercible(this);
                    var replacer = searchValue == void 0 ? void 0 : searchValue[REPLACE];
                    return replacer !== void 0 ? replacer.call(searchValue, O, replaceValue) : nativeReplace.call(String(O), searchValue, replaceValue);
                  },
                  // `RegExp.prototype[@@replace]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
                  function(regexp, replaceValue) {
                    if (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0 || typeof replaceValue === "string" && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1) {
                      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
                      if (res.done)
                        return res.value;
                    }
                    var rx = anObject(regexp);
                    var S = String(this);
                    var functionalReplace = typeof replaceValue === "function";
                    if (!functionalReplace)
                      replaceValue = String(replaceValue);
                    var global = rx.global;
                    if (global) {
                      var fullUnicode = rx.unicode;
                      rx.lastIndex = 0;
                    }
                    var results = [];
                    while (true) {
                      var result = regExpExec(rx, S);
                      if (result === null)
                        break;
                      results.push(result);
                      if (!global)
                        break;
                      var matchStr = String(result[0]);
                      if (matchStr === "")
                        rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                    }
                    var accumulatedResult = "";
                    var nextSourcePosition = 0;
                    for (var i = 0; i < results.length; i++) {
                      result = results[i];
                      var matched = String(result[0]);
                      var position = max(min(toInteger(result.index), S.length), 0);
                      var captures = [];
                      for (var j = 1; j < result.length; j++)
                        captures.push(maybeToString(result[j]));
                      var namedCaptures = result.groups;
                      if (functionalReplace) {
                        var replacerArgs = [matched].concat(captures, position, S);
                        if (namedCaptures !== void 0)
                          replacerArgs.push(namedCaptures);
                        var replacement = String(replaceValue.apply(void 0, replacerArgs));
                      } else {
                        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
                      }
                      if (position >= nextSourcePosition) {
                        accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
                        nextSourcePosition = position + matched.length;
                      }
                    }
                    return accumulatedResult + S.slice(nextSourcePosition);
                  }
                ];
              });
            }
          ),
          /***/
          "5692": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var IS_PURE = __webpack_require__("c430");
              var store = __webpack_require__("c6cd");
              (module2.exports = function(key, value) {
                return store[key] || (store[key] = value !== void 0 ? value : {});
              })("versions", []).push({
                version: "3.9.1",
                mode: IS_PURE ? "pure" : "global",
                copyright: "© 2021 Denis Pushkarev (zloirock.ru)"
              });
            }
          ),
          /***/
          "56ef": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var getBuiltIn = __webpack_require__("d066");
              var getOwnPropertyNamesModule = __webpack_require__("241c");
              var getOwnPropertySymbolsModule = __webpack_require__("7418");
              var anObject = __webpack_require__("825a");
              module2.exports = getBuiltIn("Reflect", "ownKeys") || function ownKeys(it) {
                var keys = getOwnPropertyNamesModule.f(anObject(it));
                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
              };
            }
          ),
          /***/
          "5a34": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var isRegExp = __webpack_require__("44e7");
              module2.exports = function(it) {
                if (isRegExp(it)) {
                  throw TypeError("The method doesn't accept regular expressions");
                }
                return it;
              };
            }
          ),
          /***/
          "5c6c": (
            /***/
            function(module2, exports2) {
              module2.exports = function(bitmap, value) {
                return {
                  enumerable: !(bitmap & 1),
                  configurable: !(bitmap & 2),
                  writable: !(bitmap & 4),
                  value
                };
              };
            }
          ),
          /***/
          "605d": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var classof = __webpack_require__("c6b6");
              var global = __webpack_require__("da84");
              module2.exports = classof(global.process) == "process";
            }
          ),
          /***/
          "60da": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var DESCRIPTORS = __webpack_require__("83ab");
              var fails = __webpack_require__("d039");
              var objectKeys = __webpack_require__("df75");
              var getOwnPropertySymbolsModule = __webpack_require__("7418");
              var propertyIsEnumerableModule = __webpack_require__("d1e7");
              var toObject = __webpack_require__("7b0b");
              var IndexedObject = __webpack_require__("44ad");
              var nativeAssign = Object.assign;
              var defineProperty = Object.defineProperty;
              module2.exports = !nativeAssign || fails(function() {
                if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, "a", {
                  enumerable: true,
                  get: function() {
                    defineProperty(this, "b", {
                      value: 3,
                      enumerable: false
                    });
                  }
                }), { b: 2 })).b !== 1)
                  return true;
                var A = {};
                var B = {};
                var symbol = Symbol();
                var alphabet = "abcdefghijklmnopqrst";
                A[symbol] = 7;
                alphabet.split("").forEach(function(chr) {
                  B[chr] = chr;
                });
                return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join("") != alphabet;
              }) ? function assign(target, source) {
                var T = toObject(target);
                var argumentsLength = arguments.length;
                var index = 1;
                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                var propertyIsEnumerable = propertyIsEnumerableModule.f;
                while (argumentsLength > index) {
                  var S = IndexedObject(arguments[index++]);
                  var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
                  var length = keys.length;
                  var j = 0;
                  var key;
                  while (length > j) {
                    key = keys[j++];
                    if (!DESCRIPTORS || propertyIsEnumerable.call(S, key))
                      T[key] = S[key];
                  }
                }
                return T;
              } : nativeAssign;
            }
          ),
          /***/
          "6547": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var toInteger = __webpack_require__("a691");
              var requireObjectCoercible = __webpack_require__("1d80");
              var createMethod = function(CONVERT_TO_STRING) {
                return function($this, pos) {
                  var S = String(requireObjectCoercible($this));
                  var position = toInteger(pos);
                  var size = S.length;
                  var first, second;
                  if (position < 0 || position >= size)
                    return CONVERT_TO_STRING ? "" : void 0;
                  first = S.charCodeAt(position);
                  return first < 55296 || first > 56319 || position + 1 === size || (second = S.charCodeAt(position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? S.charAt(position) : first : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
                };
              };
              module2.exports = {
                // `String.prototype.codePointAt` method
                // https://tc39.es/ecma262/#sec-string.prototype.codepointat
                codeAt: createMethod(false),
                // `String.prototype.at` method
                // https://github.com/mathiasbynens/String.prototype.at
                charAt: createMethod(true)
              };
            }
          ),
          /***/
          "65f0": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var isObject = __webpack_require__("861d");
              var isArray = __webpack_require__("e8b5");
              var wellKnownSymbol = __webpack_require__("b622");
              var SPECIES = wellKnownSymbol("species");
              module2.exports = function(originalArray, length) {
                var C;
                if (isArray(originalArray)) {
                  C = originalArray.constructor;
                  if (typeof C == "function" && (C === Array || isArray(C.prototype)))
                    C = void 0;
                  else if (isObject(C)) {
                    C = C[SPECIES];
                    if (C === null)
                      C = void 0;
                  }
                }
                return new (C === void 0 ? Array : C)(length === 0 ? 0 : length);
              };
            }
          ),
          /***/
          "69f3": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
              var global = __webpack_require__("da84");
              var isObject = __webpack_require__("861d");
              var createNonEnumerableProperty = __webpack_require__("9112");
              var objectHas = __webpack_require__("5135");
              var shared = __webpack_require__("c6cd");
              var sharedKey = __webpack_require__("f772");
              var hiddenKeys = __webpack_require__("d012");
              var WeakMap = global.WeakMap;
              var set, get, has;
              var enforce = function(it) {
                return has(it) ? get(it) : set(it, {});
              };
              var getterFor = function(TYPE) {
                return function(it) {
                  var state;
                  if (!isObject(it) || (state = get(it)).type !== TYPE) {
                    throw TypeError("Incompatible receiver, " + TYPE + " required");
                  }
                  return state;
                };
              };
              if (NATIVE_WEAK_MAP) {
                var store = shared.state || (shared.state = new WeakMap());
                var wmget = store.get;
                var wmhas = store.has;
                var wmset = store.set;
                set = function(it, metadata) {
                  metadata.facade = it;
                  wmset.call(store, it, metadata);
                  return metadata;
                };
                get = function(it) {
                  return wmget.call(store, it) || {};
                };
                has = function(it) {
                  return wmhas.call(store, it);
                };
              } else {
                var STATE = sharedKey("state");
                hiddenKeys[STATE] = true;
                set = function(it, metadata) {
                  metadata.facade = it;
                  createNonEnumerableProperty(it, STATE, metadata);
                  return metadata;
                };
                get = function(it) {
                  return objectHas(it, STATE) ? it[STATE] : {};
                };
                has = function(it) {
                  return objectHas(it, STATE);
                };
              }
              module2.exports = {
                set,
                get,
                has,
                enforce,
                getterFor
              };
            }
          ),
          /***/
          "6eeb": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var createNonEnumerableProperty = __webpack_require__("9112");
              var has = __webpack_require__("5135");
              var setGlobal = __webpack_require__("ce4e");
              var inspectSource = __webpack_require__("8925");
              var InternalStateModule = __webpack_require__("69f3");
              var getInternalState = InternalStateModule.get;
              var enforceInternalState = InternalStateModule.enforce;
              var TEMPLATE = String(String).split("String");
              (module2.exports = function(O, key, value, options) {
                var unsafe = options ? !!options.unsafe : false;
                var simple = options ? !!options.enumerable : false;
                var noTargetGet = options ? !!options.noTargetGet : false;
                var state;
                if (typeof value == "function") {
                  if (typeof key == "string" && !has(value, "name")) {
                    createNonEnumerableProperty(value, "name", key);
                  }
                  state = enforceInternalState(value);
                  if (!state.source) {
                    state.source = TEMPLATE.join(typeof key == "string" ? key : "");
                  }
                }
                if (O === global) {
                  if (simple)
                    O[key] = value;
                  else
                    setGlobal(key, value);
                  return;
                } else if (!unsafe) {
                  delete O[key];
                } else if (!noTargetGet && O[key]) {
                  simple = true;
                }
                if (simple)
                  O[key] = value;
                else
                  createNonEnumerableProperty(O, key, value);
              })(Function.prototype, "toString", function toString() {
                return typeof this == "function" && getInternalState(this).source || inspectSource(this);
              });
            }
          ),
          /***/
          "7418": (
            /***/
            function(module2, exports2) {
              exports2.f = Object.getOwnPropertySymbols;
            }
          ),
          /***/
          "746f": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var path = __webpack_require__("428f");
              var has = __webpack_require__("5135");
              var wrappedWellKnownSymbolModule = __webpack_require__("e538");
              var defineProperty = __webpack_require__("9bf2").f;
              module2.exports = function(NAME) {
                var Symbol2 = path.Symbol || (path.Symbol = {});
                if (!has(Symbol2, NAME))
                  defineProperty(Symbol2, NAME, {
                    value: wrappedWellKnownSymbolModule.f(NAME)
                  });
              };
            }
          ),
          /***/
          "7839": (
            /***/
            function(module2, exports2) {
              module2.exports = [
                "constructor",
                "hasOwnProperty",
                "isPrototypeOf",
                "propertyIsEnumerable",
                "toLocaleString",
                "toString",
                "valueOf"
              ];
            }
          ),
          /***/
          "7b0b": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var requireObjectCoercible = __webpack_require__("1d80");
              module2.exports = function(argument) {
                return Object(requireObjectCoercible(argument));
              };
            }
          ),
          /***/
          "7c73": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var anObject = __webpack_require__("825a");
              var defineProperties = __webpack_require__("37e8");
              var enumBugKeys = __webpack_require__("7839");
              var hiddenKeys = __webpack_require__("d012");
              var html = __webpack_require__("1be4");
              var documentCreateElement = __webpack_require__("cc12");
              var sharedKey = __webpack_require__("f772");
              var GT = ">";
              var LT = "<";
              var PROTOTYPE = "prototype";
              var SCRIPT = "script";
              var IE_PROTO = sharedKey("IE_PROTO");
              var EmptyConstructor = function() {
              };
              var scriptTag = function(content) {
                return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
              };
              var NullProtoObjectViaActiveX = function(activeXDocument2) {
                activeXDocument2.write(scriptTag(""));
                activeXDocument2.close();
                var temp = activeXDocument2.parentWindow.Object;
                activeXDocument2 = null;
                return temp;
              };
              var NullProtoObjectViaIFrame = function() {
                var iframe = documentCreateElement("iframe");
                var JS = "java" + SCRIPT + ":";
                var iframeDocument;
                iframe.style.display = "none";
                html.appendChild(iframe);
                iframe.src = String(JS);
                iframeDocument = iframe.contentWindow.document;
                iframeDocument.open();
                iframeDocument.write(scriptTag("document.F=Object"));
                iframeDocument.close();
                return iframeDocument.F;
              };
              var activeXDocument;
              var NullProtoObject = function() {
                try {
                  activeXDocument = document.domain && new ActiveXObject("htmlfile");
                } catch (error) {
                }
                NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
                var length = enumBugKeys.length;
                while (length--)
                  delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
                return NullProtoObject();
              };
              hiddenKeys[IE_PROTO] = true;
              module2.exports = Object.create || function create(O, Properties) {
                var result;
                if (O !== null) {
                  EmptyConstructor[PROTOTYPE] = anObject(O);
                  result = new EmptyConstructor();
                  EmptyConstructor[PROTOTYPE] = null;
                  result[IE_PROTO] = O;
                } else
                  result = NullProtoObject();
                return Properties === void 0 ? result : defineProperties(result, Properties);
              };
            }
          ),
          /***/
          "7f9a": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var inspectSource = __webpack_require__("8925");
              var WeakMap = global.WeakMap;
              module2.exports = typeof WeakMap === "function" && /native code/.test(inspectSource(WeakMap));
            }
          ),
          /***/
          "825a": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var isObject = __webpack_require__("861d");
              module2.exports = function(it) {
                if (!isObject(it)) {
                  throw TypeError(String(it) + " is not an object");
                }
                return it;
              };
            }
          ),
          /***/
          "83ab": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var fails = __webpack_require__("d039");
              module2.exports = !fails(function() {
                return Object.defineProperty({}, 1, { get: function() {
                  return 7;
                } })[1] != 7;
              });
            }
          ),
          /***/
          "8418": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var toPrimitive = __webpack_require__("c04e");
              var definePropertyModule = __webpack_require__("9bf2");
              var createPropertyDescriptor = __webpack_require__("5c6c");
              module2.exports = function(object, key, value) {
                var propertyKey = toPrimitive(key);
                if (propertyKey in object)
                  definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
                else
                  object[propertyKey] = value;
              };
            }
          ),
          /***/
          "861d": (
            /***/
            function(module2, exports2) {
              module2.exports = function(it) {
                return typeof it === "object" ? it !== null : typeof it === "function";
              };
            }
          ),
          /***/
          "8634": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              function pad(hash, len) {
                while (hash.length < len) {
                  hash = "0" + hash;
                }
                return hash;
              }
              function fold(hash, text) {
                var i;
                var chr;
                var len;
                if (text.length === 0) {
                  return hash;
                }
                for (i = 0, len = text.length; i < len; i++) {
                  chr = text.charCodeAt(i);
                  hash = (hash << 5) - hash + chr;
                  hash |= 0;
                }
                return hash < 0 ? hash * -2 : hash;
              }
              function foldObject(hash, o, seen) {
                return Object.keys(o).sort().reduce(foldKey, hash);
                function foldKey(hash2, key) {
                  return foldValue(hash2, o[key], key, seen);
                }
              }
              function foldValue(input, value, key, seen) {
                var hash = fold(fold(fold(input, key), toString(value)), typeof value);
                if (value === null) {
                  return fold(hash, "null");
                }
                if (value === void 0) {
                  return fold(hash, "undefined");
                }
                if (typeof value === "object" || typeof value === "function") {
                  if (seen.indexOf(value) !== -1) {
                    return fold(hash, "[Circular]" + key);
                  }
                  seen.push(value);
                  var objHash = foldObject(hash, value, seen);
                  if (!("valueOf" in value) || typeof value.valueOf !== "function") {
                    return objHash;
                  }
                  try {
                    return fold(objHash, String(value.valueOf()));
                  } catch (err) {
                    return fold(objHash, "[valueOf exception]" + (err.stack || err.message));
                  }
                }
                return fold(hash, value.toString());
              }
              function toString(o) {
                return Object.prototype.toString.call(o);
              }
              function sum(o) {
                return pad(foldValue(0, o, "", []).toString(16), 8);
              }
              module2.exports = sum;
            }
          ),
          /***/
          "8875": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
              (function(root, factory) {
                if (true) {
                  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports2, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== void 0 && (module2.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                } else {
                }
              })(typeof self !== "undefined" ? self : this, function() {
                function getCurrentScript() {
                  var descriptor = Object.getOwnPropertyDescriptor(document, "currentScript");
                  if (!descriptor && "currentScript" in document && document.currentScript) {
                    return document.currentScript;
                  }
                  if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
                    return document.currentScript;
                  }
                  try {
                    throw new Error();
                  } catch (err) {
                    var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig, ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig, stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack), scriptLocation = stackDetails && stackDetails[1] || false, line = stackDetails && stackDetails[2] || false, currentLocation = document.location.href.replace(document.location.hash, ""), pageSource, inlineScriptSourceRegExp, inlineScriptSource, scripts = document.getElementsByTagName("script");
                    if (scriptLocation === currentLocation) {
                      pageSource = document.documentElement.outerHTML;
                      inlineScriptSourceRegExp = new RegExp("(?:[^\\n]+?\\n){0," + (line - 2) + "}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*", "i");
                      inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, "$1").trim();
                    }
                    for (var i = 0; i < scripts.length; i++) {
                      if (scripts[i].readyState === "interactive") {
                        return scripts[i];
                      }
                      if (scripts[i].src === scriptLocation) {
                        return scripts[i];
                      }
                      if (scriptLocation === currentLocation && scripts[i].innerHTML && scripts[i].innerHTML.trim() === inlineScriptSource) {
                        return scripts[i];
                      }
                    }
                    return null;
                  }
                }
                ;
                return getCurrentScript;
              });
            }
          ),
          /***/
          "8925": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var store = __webpack_require__("c6cd");
              var functionToString = Function.toString;
              if (typeof store.inspectSource != "function") {
                store.inspectSource = function(it) {
                  return functionToString.call(it);
                };
              }
              module2.exports = store.inspectSource;
            }
          ),
          /***/
          "8aa5": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var charAt = __webpack_require__("6547").charAt;
              module2.exports = function(S, index, unicode) {
                return index + (unicode ? charAt(S, index).length : 1);
              };
            }
          ),
          /***/
          "90e3": (
            /***/
            function(module2, exports2) {
              var id = 0;
              var postfix = Math.random();
              module2.exports = function(key) {
                return "Symbol(" + String(key === void 0 ? "" : key) + ")_" + (++id + postfix).toString(36);
              };
            }
          ),
          /***/
          "9112": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var DESCRIPTORS = __webpack_require__("83ab");
              var definePropertyModule = __webpack_require__("9bf2");
              var createPropertyDescriptor = __webpack_require__("5c6c");
              module2.exports = DESCRIPTORS ? function(object, key, value) {
                return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
              } : function(object, key, value) {
                object[key] = value;
                return object;
              };
            }
          ),
          /***/
          "9263": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var regexpFlags = __webpack_require__("ad6d");
              var stickyHelpers = __webpack_require__("9f7f");
              var nativeExec = RegExp.prototype.exec;
              var nativeReplace = String.prototype.replace;
              var patchedExec = nativeExec;
              var UPDATES_LAST_INDEX_WRONG = function() {
                var re1 = /a/;
                var re2 = /b*/g;
                nativeExec.call(re1, "a");
                nativeExec.call(re2, "a");
                return re1.lastIndex !== 0 || re2.lastIndex !== 0;
              }();
              var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;
              var NPCG_INCLUDED = /()??/.exec("")[1] !== void 0;
              var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;
              if (PATCH) {
                patchedExec = function exec(str) {
                  var re = this;
                  var lastIndex, reCopy, match, i;
                  var sticky = UNSUPPORTED_Y && re.sticky;
                  var flags = regexpFlags.call(re);
                  var source = re.source;
                  var charsAdded = 0;
                  var strCopy = str;
                  if (sticky) {
                    flags = flags.replace("y", "");
                    if (flags.indexOf("g") === -1) {
                      flags += "g";
                    }
                    strCopy = String(str).slice(re.lastIndex);
                    if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== "\n")) {
                      source = "(?: " + source + ")";
                      strCopy = " " + strCopy;
                      charsAdded++;
                    }
                    reCopy = new RegExp("^(?:" + source + ")", flags);
                  }
                  if (NPCG_INCLUDED) {
                    reCopy = new RegExp("^" + source + "$(?!\\s)", flags);
                  }
                  if (UPDATES_LAST_INDEX_WRONG)
                    lastIndex = re.lastIndex;
                  match = nativeExec.call(sticky ? reCopy : re, strCopy);
                  if (sticky) {
                    if (match) {
                      match.input = match.input.slice(charsAdded);
                      match[0] = match[0].slice(charsAdded);
                      match.index = re.lastIndex;
                      re.lastIndex += match[0].length;
                    } else
                      re.lastIndex = 0;
                  } else if (UPDATES_LAST_INDEX_WRONG && match) {
                    re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
                  }
                  if (NPCG_INCLUDED && match && match.length > 1) {
                    nativeReplace.call(match[0], reCopy, function() {
                      for (i = 1; i < arguments.length - 2; i++) {
                        if (arguments[i] === void 0)
                          match[i] = void 0;
                      }
                    });
                  }
                  return match;
                };
              }
              module2.exports = patchedExec;
            }
          ),
          /***/
          "94ca": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var fails = __webpack_require__("d039");
              var replacement = /#|\.prototype\./;
              var isForced = function(feature, detection) {
                var value = data[normalize(feature)];
                return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == "function" ? fails(detection) : !!detection;
              };
              var normalize = isForced.normalize = function(string) {
                return String(string).replace(replacement, ".").toLowerCase();
              };
              var data = isForced.data = {};
              var NATIVE = isForced.NATIVE = "N";
              var POLYFILL = isForced.POLYFILL = "P";
              module2.exports = isForced;
            }
          ),
          /***/
          "96cf": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var runtime = function(exports3) {
                "use strict";
                var Op = Object.prototype;
                var hasOwn = Op.hasOwnProperty;
                var undefined2;
                var $Symbol = typeof Symbol === "function" ? Symbol : {};
                var iteratorSymbol = $Symbol.iterator || "@@iterator";
                var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
                var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
                function define2(obj, key, value) {
                  Object.defineProperty(obj, key, {
                    value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                  });
                  return obj[key];
                }
                try {
                  define2({}, "");
                } catch (err) {
                  define2 = function(obj, key, value) {
                    return obj[key] = value;
                  };
                }
                function wrap(innerFn, outerFn, self2, tryLocsList) {
                  var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
                  var generator = Object.create(protoGenerator.prototype);
                  var context = new Context(tryLocsList || []);
                  generator._invoke = makeInvokeMethod(innerFn, self2, context);
                  return generator;
                }
                exports3.wrap = wrap;
                function tryCatch(fn, obj, arg) {
                  try {
                    return { type: "normal", arg: fn.call(obj, arg) };
                  } catch (err) {
                    return { type: "throw", arg: err };
                  }
                }
                var GenStateSuspendedStart = "suspendedStart";
                var GenStateSuspendedYield = "suspendedYield";
                var GenStateExecuting = "executing";
                var GenStateCompleted = "completed";
                var ContinueSentinel = {};
                function Generator() {
                }
                function GeneratorFunction() {
                }
                function GeneratorFunctionPrototype() {
                }
                var IteratorPrototype = {};
                IteratorPrototype[iteratorSymbol] = function() {
                  return this;
                };
                var getProto = Object.getPrototypeOf;
                var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
                if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
                  IteratorPrototype = NativeIteratorPrototype;
                }
                var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
                GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
                GeneratorFunctionPrototype.constructor = GeneratorFunction;
                GeneratorFunction.displayName = define2(
                  GeneratorFunctionPrototype,
                  toStringTagSymbol,
                  "GeneratorFunction"
                );
                function defineIteratorMethods(prototype) {
                  ["next", "throw", "return"].forEach(function(method) {
                    define2(prototype, method, function(arg) {
                      return this._invoke(method, arg);
                    });
                  });
                }
                exports3.isGeneratorFunction = function(genFun) {
                  var ctor = typeof genFun === "function" && genFun.constructor;
                  return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
                };
                exports3.mark = function(genFun) {
                  if (Object.setPrototypeOf) {
                    Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
                  } else {
                    genFun.__proto__ = GeneratorFunctionPrototype;
                    define2(genFun, toStringTagSymbol, "GeneratorFunction");
                  }
                  genFun.prototype = Object.create(Gp);
                  return genFun;
                };
                exports3.awrap = function(arg) {
                  return { __await: arg };
                };
                function AsyncIterator(generator, PromiseImpl) {
                  function invoke(method, arg, resolve, reject) {
                    var record = tryCatch(generator[method], generator, arg);
                    if (record.type === "throw") {
                      reject(record.arg);
                    } else {
                      var result = record.arg;
                      var value = result.value;
                      if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
                        return PromiseImpl.resolve(value.__await).then(function(value2) {
                          invoke("next", value2, resolve, reject);
                        }, function(err) {
                          invoke("throw", err, resolve, reject);
                        });
                      }
                      return PromiseImpl.resolve(value).then(function(unwrapped) {
                        result.value = unwrapped;
                        resolve(result);
                      }, function(error) {
                        return invoke("throw", error, resolve, reject);
                      });
                    }
                  }
                  var previousPromise;
                  function enqueue(method, arg) {
                    function callInvokeWithMethodAndArg() {
                      return new PromiseImpl(function(resolve, reject) {
                        invoke(method, arg, resolve, reject);
                      });
                    }
                    return previousPromise = // If enqueue has been called before, then we want to wait until
                    // all previous Promises have been resolved before calling invoke,
                    // so that results are always delivered in the correct order. If
                    // enqueue has not been called before, then it is important to
                    // call invoke immediately, without waiting on a callback to fire,
                    // so that the async generator function has the opportunity to do
                    // any necessary setup in a predictable way. This predictability
                    // is why the Promise constructor synchronously invokes its
                    // executor callback, and why async functions synchronously
                    // execute code before the first await. Since we implement simple
                    // async functions in terms of async generators, it is especially
                    // important to get this right, even though it requires care.
                    previousPromise ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    ) : callInvokeWithMethodAndArg();
                  }
                  this._invoke = enqueue;
                }
                defineIteratorMethods(AsyncIterator.prototype);
                AsyncIterator.prototype[asyncIteratorSymbol] = function() {
                  return this;
                };
                exports3.AsyncIterator = AsyncIterator;
                exports3.async = function(innerFn, outerFn, self2, tryLocsList, PromiseImpl) {
                  if (PromiseImpl === void 0)
                    PromiseImpl = Promise;
                  var iter = new AsyncIterator(
                    wrap(innerFn, outerFn, self2, tryLocsList),
                    PromiseImpl
                  );
                  return exports3.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {
                    return result.done ? result.value : iter.next();
                  });
                };
                function makeInvokeMethod(innerFn, self2, context) {
                  var state = GenStateSuspendedStart;
                  return function invoke(method, arg) {
                    if (state === GenStateExecuting) {
                      throw new Error("Generator is already running");
                    }
                    if (state === GenStateCompleted) {
                      if (method === "throw") {
                        throw arg;
                      }
                      return doneResult();
                    }
                    context.method = method;
                    context.arg = arg;
                    while (true) {
                      var delegate = context.delegate;
                      if (delegate) {
                        var delegateResult = maybeInvokeDelegate(delegate, context);
                        if (delegateResult) {
                          if (delegateResult === ContinueSentinel)
                            continue;
                          return delegateResult;
                        }
                      }
                      if (context.method === "next") {
                        context.sent = context._sent = context.arg;
                      } else if (context.method === "throw") {
                        if (state === GenStateSuspendedStart) {
                          state = GenStateCompleted;
                          throw context.arg;
                        }
                        context.dispatchException(context.arg);
                      } else if (context.method === "return") {
                        context.abrupt("return", context.arg);
                      }
                      state = GenStateExecuting;
                      var record = tryCatch(innerFn, self2, context);
                      if (record.type === "normal") {
                        state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                        if (record.arg === ContinueSentinel) {
                          continue;
                        }
                        return {
                          value: record.arg,
                          done: context.done
                        };
                      } else if (record.type === "throw") {
                        state = GenStateCompleted;
                        context.method = "throw";
                        context.arg = record.arg;
                      }
                    }
                  };
                }
                function maybeInvokeDelegate(delegate, context) {
                  var method = delegate.iterator[context.method];
                  if (method === undefined2) {
                    context.delegate = null;
                    if (context.method === "throw") {
                      if (delegate.iterator["return"]) {
                        context.method = "return";
                        context.arg = undefined2;
                        maybeInvokeDelegate(delegate, context);
                        if (context.method === "throw") {
                          return ContinueSentinel;
                        }
                      }
                      context.method = "throw";
                      context.arg = new TypeError(
                        "The iterator does not provide a 'throw' method"
                      );
                    }
                    return ContinueSentinel;
                  }
                  var record = tryCatch(method, delegate.iterator, context.arg);
                  if (record.type === "throw") {
                    context.method = "throw";
                    context.arg = record.arg;
                    context.delegate = null;
                    return ContinueSentinel;
                  }
                  var info = record.arg;
                  if (!info) {
                    context.method = "throw";
                    context.arg = new TypeError("iterator result is not an object");
                    context.delegate = null;
                    return ContinueSentinel;
                  }
                  if (info.done) {
                    context[delegate.resultName] = info.value;
                    context.next = delegate.nextLoc;
                    if (context.method !== "return") {
                      context.method = "next";
                      context.arg = undefined2;
                    }
                  } else {
                    return info;
                  }
                  context.delegate = null;
                  return ContinueSentinel;
                }
                defineIteratorMethods(Gp);
                define2(Gp, toStringTagSymbol, "Generator");
                Gp[iteratorSymbol] = function() {
                  return this;
                };
                Gp.toString = function() {
                  return "[object Generator]";
                };
                function pushTryEntry(locs) {
                  var entry = { tryLoc: locs[0] };
                  if (1 in locs) {
                    entry.catchLoc = locs[1];
                  }
                  if (2 in locs) {
                    entry.finallyLoc = locs[2];
                    entry.afterLoc = locs[3];
                  }
                  this.tryEntries.push(entry);
                }
                function resetTryEntry(entry) {
                  var record = entry.completion || {};
                  record.type = "normal";
                  delete record.arg;
                  entry.completion = record;
                }
                function Context(tryLocsList) {
                  this.tryEntries = [{ tryLoc: "root" }];
                  tryLocsList.forEach(pushTryEntry, this);
                  this.reset(true);
                }
                exports3.keys = function(object) {
                  var keys = [];
                  for (var key in object) {
                    keys.push(key);
                  }
                  keys.reverse();
                  return function next() {
                    while (keys.length) {
                      var key2 = keys.pop();
                      if (key2 in object) {
                        next.value = key2;
                        next.done = false;
                        return next;
                      }
                    }
                    next.done = true;
                    return next;
                  };
                };
                function values(iterable) {
                  if (iterable) {
                    var iteratorMethod = iterable[iteratorSymbol];
                    if (iteratorMethod) {
                      return iteratorMethod.call(iterable);
                    }
                    if (typeof iterable.next === "function") {
                      return iterable;
                    }
                    if (!isNaN(iterable.length)) {
                      var i = -1, next = function next2() {
                        while (++i < iterable.length) {
                          if (hasOwn.call(iterable, i)) {
                            next2.value = iterable[i];
                            next2.done = false;
                            return next2;
                          }
                        }
                        next2.value = undefined2;
                        next2.done = true;
                        return next2;
                      };
                      return next.next = next;
                    }
                  }
                  return { next: doneResult };
                }
                exports3.values = values;
                function doneResult() {
                  return { value: undefined2, done: true };
                }
                Context.prototype = {
                  constructor: Context,
                  reset: function(skipTempReset) {
                    this.prev = 0;
                    this.next = 0;
                    this.sent = this._sent = undefined2;
                    this.done = false;
                    this.delegate = null;
                    this.method = "next";
                    this.arg = undefined2;
                    this.tryEntries.forEach(resetTryEntry);
                    if (!skipTempReset) {
                      for (var name in this) {
                        if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                          this[name] = undefined2;
                        }
                      }
                    }
                  },
                  stop: function() {
                    this.done = true;
                    var rootEntry = this.tryEntries[0];
                    var rootRecord = rootEntry.completion;
                    if (rootRecord.type === "throw") {
                      throw rootRecord.arg;
                    }
                    return this.rval;
                  },
                  dispatchException: function(exception) {
                    if (this.done) {
                      throw exception;
                    }
                    var context = this;
                    function handle(loc, caught) {
                      record.type = "throw";
                      record.arg = exception;
                      context.next = loc;
                      if (caught) {
                        context.method = "next";
                        context.arg = undefined2;
                      }
                      return !!caught;
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                      var entry = this.tryEntries[i];
                      var record = entry.completion;
                      if (entry.tryLoc === "root") {
                        return handle("end");
                      }
                      if (entry.tryLoc <= this.prev) {
                        var hasCatch = hasOwn.call(entry, "catchLoc");
                        var hasFinally = hasOwn.call(entry, "finallyLoc");
                        if (hasCatch && hasFinally) {
                          if (this.prev < entry.catchLoc) {
                            return handle(entry.catchLoc, true);
                          } else if (this.prev < entry.finallyLoc) {
                            return handle(entry.finallyLoc);
                          }
                        } else if (hasCatch) {
                          if (this.prev < entry.catchLoc) {
                            return handle(entry.catchLoc, true);
                          }
                        } else if (hasFinally) {
                          if (this.prev < entry.finallyLoc) {
                            return handle(entry.finallyLoc);
                          }
                        } else {
                          throw new Error("try statement without catch or finally");
                        }
                      }
                    }
                  },
                  abrupt: function(type, arg) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                      var entry = this.tryEntries[i];
                      if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                        var finallyEntry = entry;
                        break;
                      }
                    }
                    if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                      finallyEntry = null;
                    }
                    var record = finallyEntry ? finallyEntry.completion : {};
                    record.type = type;
                    record.arg = arg;
                    if (finallyEntry) {
                      this.method = "next";
                      this.next = finallyEntry.finallyLoc;
                      return ContinueSentinel;
                    }
                    return this.complete(record);
                  },
                  complete: function(record, afterLoc) {
                    if (record.type === "throw") {
                      throw record.arg;
                    }
                    if (record.type === "break" || record.type === "continue") {
                      this.next = record.arg;
                    } else if (record.type === "return") {
                      this.rval = this.arg = record.arg;
                      this.method = "return";
                      this.next = "end";
                    } else if (record.type === "normal" && afterLoc) {
                      this.next = afterLoc;
                    }
                    return ContinueSentinel;
                  },
                  finish: function(finallyLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                      var entry = this.tryEntries[i];
                      if (entry.finallyLoc === finallyLoc) {
                        this.complete(entry.completion, entry.afterLoc);
                        resetTryEntry(entry);
                        return ContinueSentinel;
                      }
                    }
                  },
                  "catch": function(tryLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                      var entry = this.tryEntries[i];
                      if (entry.tryLoc === tryLoc) {
                        var record = entry.completion;
                        if (record.type === "throw") {
                          var thrown = record.arg;
                          resetTryEntry(entry);
                        }
                        return thrown;
                      }
                    }
                    throw new Error("illegal catch attempt");
                  },
                  delegateYield: function(iterable, resultName, nextLoc) {
                    this.delegate = {
                      iterator: values(iterable),
                      resultName,
                      nextLoc
                    };
                    if (this.method === "next") {
                      this.arg = undefined2;
                    }
                    return ContinueSentinel;
                  }
                };
                return exports3;
              }(
                // If this script is executing as a CommonJS module, use module.exports
                // as the regeneratorRuntime namespace. Otherwise create a new empty
                // object. Either way, the resulting object will be used to initialize
                // the regeneratorRuntime variable at the top of this file.
                true ? module2.exports : void 0
              );
              try {
                regeneratorRuntime = runtime;
              } catch (accidentalStrictMode) {
                Function("r", "regeneratorRuntime = r")(runtime);
              }
            }
          ),
          /***/
          "99af": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $ = __webpack_require__("23e7");
              var fails = __webpack_require__("d039");
              var isArray = __webpack_require__("e8b5");
              var isObject = __webpack_require__("861d");
              var toObject = __webpack_require__("7b0b");
              var toLength = __webpack_require__("50c4");
              var createProperty = __webpack_require__("8418");
              var arraySpeciesCreate = __webpack_require__("65f0");
              var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
              var wellKnownSymbol = __webpack_require__("b622");
              var V8_VERSION = __webpack_require__("2d00");
              var IS_CONCAT_SPREADABLE = wellKnownSymbol("isConcatSpreadable");
              var MAX_SAFE_INTEGER = 9007199254740991;
              var MAXIMUM_ALLOWED_INDEX_EXCEEDED = "Maximum allowed index exceeded";
              var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function() {
                var array = [];
                array[IS_CONCAT_SPREADABLE] = false;
                return array.concat()[0] !== array;
              });
              var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("concat");
              var isConcatSpreadable = function(O) {
                if (!isObject(O))
                  return false;
                var spreadable = O[IS_CONCAT_SPREADABLE];
                return spreadable !== void 0 ? !!spreadable : isArray(O);
              };
              var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;
              $({ target: "Array", proto: true, forced: FORCED }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                concat: function concat(arg) {
                  var O = toObject(this);
                  var A = arraySpeciesCreate(O, 0);
                  var n = 0;
                  var i, k, length, len, E;
                  for (i = -1, length = arguments.length; i < length; i++) {
                    E = i === -1 ? O : arguments[i];
                    if (isConcatSpreadable(E)) {
                      len = toLength(E.length);
                      if (n + len > MAX_SAFE_INTEGER)
                        throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                      for (k = 0; k < len; k++, n++)
                        if (k in E)
                          createProperty(A, n, E[k]);
                    } else {
                      if (n >= MAX_SAFE_INTEGER)
                        throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                      createProperty(A, n++, E);
                    }
                  }
                  A.length = n;
                  return A;
                }
              });
            }
          ),
          /***/
          "9bf2": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var DESCRIPTORS = __webpack_require__("83ab");
              var IE8_DOM_DEFINE = __webpack_require__("0cfb");
              var anObject = __webpack_require__("825a");
              var toPrimitive = __webpack_require__("c04e");
              var nativeDefineProperty = Object.defineProperty;
              exports2.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
                anObject(O);
                P = toPrimitive(P, true);
                anObject(Attributes);
                if (IE8_DOM_DEFINE)
                  try {
                    return nativeDefineProperty(O, P, Attributes);
                  } catch (error) {
                  }
                if ("get" in Attributes || "set" in Attributes)
                  throw TypeError("Accessors not supported");
                if ("value" in Attributes)
                  O[P] = Attributes.value;
                return O;
              };
            }
          ),
          /***/
          "9f7f": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var fails = __webpack_require__("d039");
              function RE(s, f) {
                return RegExp(s, f);
              }
              exports2.UNSUPPORTED_Y = fails(function() {
                var re = RE("a", "y");
                re.lastIndex = 2;
                return re.exec("abcd") != null;
              });
              exports2.BROKEN_CARET = fails(function() {
                var re = RE("^r", "gy");
                re.lastIndex = 2;
                return re.exec("str") != null;
              });
            }
          ),
          /***/
          "a4b4": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var userAgent = __webpack_require__("342f");
              module2.exports = /web0s(?!.*chrome)/i.test(userAgent);
            }
          ),
          /***/
          "a4d3": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $ = __webpack_require__("23e7");
              var global = __webpack_require__("da84");
              var getBuiltIn = __webpack_require__("d066");
              var IS_PURE = __webpack_require__("c430");
              var DESCRIPTORS = __webpack_require__("83ab");
              var NATIVE_SYMBOL = __webpack_require__("4930");
              var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
              var fails = __webpack_require__("d039");
              var has = __webpack_require__("5135");
              var isArray = __webpack_require__("e8b5");
              var isObject = __webpack_require__("861d");
              var anObject = __webpack_require__("825a");
              var toObject = __webpack_require__("7b0b");
              var toIndexedObject = __webpack_require__("fc6a");
              var toPrimitive = __webpack_require__("c04e");
              var createPropertyDescriptor = __webpack_require__("5c6c");
              var nativeObjectCreate = __webpack_require__("7c73");
              var objectKeys = __webpack_require__("df75");
              var getOwnPropertyNamesModule = __webpack_require__("241c");
              var getOwnPropertyNamesExternal = __webpack_require__("057f");
              var getOwnPropertySymbolsModule = __webpack_require__("7418");
              var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
              var definePropertyModule = __webpack_require__("9bf2");
              var propertyIsEnumerableModule = __webpack_require__("d1e7");
              var createNonEnumerableProperty = __webpack_require__("9112");
              var redefine = __webpack_require__("6eeb");
              var shared = __webpack_require__("5692");
              var sharedKey = __webpack_require__("f772");
              var hiddenKeys = __webpack_require__("d012");
              var uid = __webpack_require__("90e3");
              var wellKnownSymbol = __webpack_require__("b622");
              var wrappedWellKnownSymbolModule = __webpack_require__("e538");
              var defineWellKnownSymbol = __webpack_require__("746f");
              var setToStringTag = __webpack_require__("d44e");
              var InternalStateModule = __webpack_require__("69f3");
              var $forEach = __webpack_require__("b727").forEach;
              var HIDDEN = sharedKey("hidden");
              var SYMBOL = "Symbol";
              var PROTOTYPE = "prototype";
              var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
              var setInternalState = InternalStateModule.set;
              var getInternalState = InternalStateModule.getterFor(SYMBOL);
              var ObjectPrototype = Object[PROTOTYPE];
              var $Symbol = global.Symbol;
              var $stringify = getBuiltIn("JSON", "stringify");
              var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
              var nativeDefineProperty = definePropertyModule.f;
              var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
              var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
              var AllSymbols = shared("symbols");
              var ObjectPrototypeSymbols = shared("op-symbols");
              var StringToSymbolRegistry = shared("string-to-symbol-registry");
              var SymbolToStringRegistry = shared("symbol-to-string-registry");
              var WellKnownSymbolsStore = shared("wks");
              var QObject = global.QObject;
              var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
              var setSymbolDescriptor = DESCRIPTORS && fails(function() {
                return nativeObjectCreate(nativeDefineProperty({}, "a", {
                  get: function() {
                    return nativeDefineProperty(this, "a", { value: 7 }).a;
                  }
                })).a != 7;
              }) ? function(O, P, Attributes) {
                var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
                if (ObjectPrototypeDescriptor)
                  delete ObjectPrototype[P];
                nativeDefineProperty(O, P, Attributes);
                if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
                  nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
                }
              } : nativeDefineProperty;
              var wrap = function(tag, description) {
                var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
                setInternalState(symbol, {
                  type: SYMBOL,
                  tag,
                  description
                });
                if (!DESCRIPTORS)
                  symbol.description = description;
                return symbol;
              };
              var isSymbol = USE_SYMBOL_AS_UID ? function(it) {
                return typeof it == "symbol";
              } : function(it) {
                return Object(it) instanceof $Symbol;
              };
              var $defineProperty = function defineProperty(O, P, Attributes) {
                if (O === ObjectPrototype)
                  $defineProperty(ObjectPrototypeSymbols, P, Attributes);
                anObject(O);
                var key = toPrimitive(P, true);
                anObject(Attributes);
                if (has(AllSymbols, key)) {
                  if (!Attributes.enumerable) {
                    if (!has(O, HIDDEN))
                      nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
                    O[HIDDEN][key] = true;
                  } else {
                    if (has(O, HIDDEN) && O[HIDDEN][key])
                      O[HIDDEN][key] = false;
                    Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
                  }
                  return setSymbolDescriptor(O, key, Attributes);
                }
                return nativeDefineProperty(O, key, Attributes);
              };
              var $defineProperties = function defineProperties(O, Properties) {
                anObject(O);
                var properties = toIndexedObject(Properties);
                var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
                $forEach(keys, function(key) {
                  if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key))
                    $defineProperty(O, key, properties[key]);
                });
                return O;
              };
              var $create = function create(O, Properties) {
                return Properties === void 0 ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
              };
              var $propertyIsEnumerable = function propertyIsEnumerable(V) {
                var P = toPrimitive(V, true);
                var enumerable = nativePropertyIsEnumerable.call(this, P);
                if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P))
                  return false;
                return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
              };
              var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
                var it = toIndexedObject(O);
                var key = toPrimitive(P, true);
                if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key))
                  return;
                var descriptor = nativeGetOwnPropertyDescriptor(it, key);
                if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
                  descriptor.enumerable = true;
                }
                return descriptor;
              };
              var $getOwnPropertyNames = function getOwnPropertyNames(O) {
                var names = nativeGetOwnPropertyNames(toIndexedObject(O));
                var result = [];
                $forEach(names, function(key) {
                  if (!has(AllSymbols, key) && !has(hiddenKeys, key))
                    result.push(key);
                });
                return result;
              };
              var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
                var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
                var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
                var result = [];
                $forEach(names, function(key) {
                  if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
                    result.push(AllSymbols[key]);
                  }
                });
                return result;
              };
              if (!NATIVE_SYMBOL) {
                $Symbol = function Symbol2() {
                  if (this instanceof $Symbol)
                    throw TypeError("Symbol is not a constructor");
                  var description = !arguments.length || arguments[0] === void 0 ? void 0 : String(arguments[0]);
                  var tag = uid(description);
                  var setter = function(value) {
                    if (this === ObjectPrototype)
                      setter.call(ObjectPrototypeSymbols, value);
                    if (has(this, HIDDEN) && has(this[HIDDEN], tag))
                      this[HIDDEN][tag] = false;
                    setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
                  };
                  if (DESCRIPTORS && USE_SETTER)
                    setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
                  return wrap(tag, description);
                };
                redefine($Symbol[PROTOTYPE], "toString", function toString() {
                  return getInternalState(this).tag;
                });
                redefine($Symbol, "withoutSetter", function(description) {
                  return wrap(uid(description), description);
                });
                propertyIsEnumerableModule.f = $propertyIsEnumerable;
                definePropertyModule.f = $defineProperty;
                getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
                getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
                getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;
                wrappedWellKnownSymbolModule.f = function(name) {
                  return wrap(wellKnownSymbol(name), name);
                };
                if (DESCRIPTORS) {
                  nativeDefineProperty($Symbol[PROTOTYPE], "description", {
                    configurable: true,
                    get: function description() {
                      return getInternalState(this).description;
                    }
                  });
                  if (!IS_PURE) {
                    redefine(ObjectPrototype, "propertyIsEnumerable", $propertyIsEnumerable, { unsafe: true });
                  }
                }
              }
              $({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
                Symbol: $Symbol
              });
              $forEach(objectKeys(WellKnownSymbolsStore), function(name) {
                defineWellKnownSymbol(name);
              });
              $({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
                // `Symbol.for` method
                // https://tc39.es/ecma262/#sec-symbol.for
                "for": function(key) {
                  var string = String(key);
                  if (has(StringToSymbolRegistry, string))
                    return StringToSymbolRegistry[string];
                  var symbol = $Symbol(string);
                  StringToSymbolRegistry[string] = symbol;
                  SymbolToStringRegistry[symbol] = string;
                  return symbol;
                },
                // `Symbol.keyFor` method
                // https://tc39.es/ecma262/#sec-symbol.keyfor
                keyFor: function keyFor(sym) {
                  if (!isSymbol(sym))
                    throw TypeError(sym + " is not a symbol");
                  if (has(SymbolToStringRegistry, sym))
                    return SymbolToStringRegistry[sym];
                },
                useSetter: function() {
                  USE_SETTER = true;
                },
                useSimple: function() {
                  USE_SETTER = false;
                }
              });
              $({ target: "Object", stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
                // `Object.create` method
                // https://tc39.es/ecma262/#sec-object.create
                create: $create,
                // `Object.defineProperty` method
                // https://tc39.es/ecma262/#sec-object.defineproperty
                defineProperty: $defineProperty,
                // `Object.defineProperties` method
                // https://tc39.es/ecma262/#sec-object.defineproperties
                defineProperties: $defineProperties,
                // `Object.getOwnPropertyDescriptor` method
                // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
                getOwnPropertyDescriptor: $getOwnPropertyDescriptor
              });
              $({ target: "Object", stat: true, forced: !NATIVE_SYMBOL }, {
                // `Object.getOwnPropertyNames` method
                // https://tc39.es/ecma262/#sec-object.getownpropertynames
                getOwnPropertyNames: $getOwnPropertyNames,
                // `Object.getOwnPropertySymbols` method
                // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
                getOwnPropertySymbols: $getOwnPropertySymbols
              });
              $({ target: "Object", stat: true, forced: fails(function() {
                getOwnPropertySymbolsModule.f(1);
              }) }, {
                getOwnPropertySymbols: function getOwnPropertySymbols(it) {
                  return getOwnPropertySymbolsModule.f(toObject(it));
                }
              });
              if ($stringify) {
                var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function() {
                  var symbol = $Symbol();
                  return $stringify([symbol]) != "[null]" || $stringify({ a: symbol }) != "{}" || $stringify(Object(symbol)) != "{}";
                });
                $({ target: "JSON", stat: true, forced: FORCED_JSON_STRINGIFY }, {
                  // eslint-disable-next-line no-unused-vars -- required for `.length`
                  stringify: function stringify(it, replacer, space) {
                    var args = [it];
                    var index = 1;
                    var $replacer;
                    while (arguments.length > index)
                      args.push(arguments[index++]);
                    $replacer = replacer;
                    if (!isObject(replacer) && it === void 0 || isSymbol(it))
                      return;
                    if (!isArray(replacer))
                      replacer = function(key, value) {
                        if (typeof $replacer == "function")
                          value = $replacer.call(this, key, value);
                        if (!isSymbol(value))
                          return value;
                      };
                    args[1] = replacer;
                    return $stringify.apply(null, args);
                  }
                });
              }
              if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
                createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
              }
              setToStringTag($Symbol, SYMBOL);
              hiddenKeys[HIDDEN] = true;
            }
          ),
          /***/
          "a640": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var fails = __webpack_require__("d039");
              module2.exports = function(METHOD_NAME, argument) {
                var method = [][METHOD_NAME];
                return !!method && fails(function() {
                  method.call(null, argument || function() {
                    throw 1;
                  }, 1);
                });
              };
            }
          ),
          /***/
          "a691": (
            /***/
            function(module2, exports2) {
              var ceil = Math.ceil;
              var floor = Math.floor;
              module2.exports = function(argument) {
                return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
              };
            }
          ),
          /***/
          "ab13": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var wellKnownSymbol = __webpack_require__("b622");
              var MATCH = wellKnownSymbol("match");
              module2.exports = function(METHOD_NAME) {
                var regexp = /./;
                try {
                  "/./"[METHOD_NAME](regexp);
                } catch (error1) {
                  try {
                    regexp[MATCH] = false;
                    return "/./"[METHOD_NAME](regexp);
                  } catch (error2) {
                  }
                }
                return false;
              };
            }
          ),
          /***/
          "ac1f": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $ = __webpack_require__("23e7");
              var exec = __webpack_require__("9263");
              $({ target: "RegExp", proto: true, forced: /./.exec !== exec }, {
                exec
              });
            }
          ),
          /***/
          "ad6d": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var anObject = __webpack_require__("825a");
              module2.exports = function() {
                var that = anObject(this);
                var result = "";
                if (that.global)
                  result += "g";
                if (that.ignoreCase)
                  result += "i";
                if (that.multiline)
                  result += "m";
                if (that.dotAll)
                  result += "s";
                if (that.unicode)
                  result += "u";
                if (that.sticky)
                  result += "y";
                return result;
              };
            }
          ),
          /***/
          "b041": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
              var classof = __webpack_require__("f5df");
              module2.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
                return "[object " + classof(this) + "]";
              };
            }
          ),
          /***/
          "b0c0": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var DESCRIPTORS = __webpack_require__("83ab");
              var defineProperty = __webpack_require__("9bf2").f;
              var FunctionPrototype = Function.prototype;
              var FunctionPrototypeToString = FunctionPrototype.toString;
              var nameRE = /^\s*function ([^ (]*)/;
              var NAME = "name";
              if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
                defineProperty(FunctionPrototype, NAME, {
                  configurable: true,
                  get: function() {
                    try {
                      return FunctionPrototypeToString.call(this).match(nameRE)[1];
                    } catch (error) {
                      return "";
                    }
                  }
                });
              }
            }
          ),
          /***/
          "b575": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
              var macrotask = __webpack_require__("2cf4").set;
              var IS_IOS = __webpack_require__("1cdc");
              var IS_WEBOS_WEBKIT = __webpack_require__("a4b4");
              var IS_NODE = __webpack_require__("605d");
              var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
              var document2 = global.document;
              var process = global.process;
              var Promise2 = global.Promise;
              var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, "queueMicrotask");
              var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
              var flush, head, last, notify, toggle, node, promise, then;
              if (!queueMicrotask) {
                flush = function() {
                  var parent, fn;
                  if (IS_NODE && (parent = process.domain))
                    parent.exit();
                  while (head) {
                    fn = head.fn;
                    head = head.next;
                    try {
                      fn();
                    } catch (error) {
                      if (head)
                        notify();
                      else
                        last = void 0;
                      throw error;
                    }
                  }
                  last = void 0;
                  if (parent)
                    parent.enter();
                };
                if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document2) {
                  toggle = true;
                  node = document2.createTextNode("");
                  new MutationObserver(flush).observe(node, { characterData: true });
                  notify = function() {
                    node.data = toggle = !toggle;
                  };
                } else if (Promise2 && Promise2.resolve) {
                  promise = Promise2.resolve(void 0);
                  then = promise.then;
                  notify = function() {
                    then.call(promise, flush);
                  };
                } else if (IS_NODE) {
                  notify = function() {
                    process.nextTick(flush);
                  };
                } else {
                  notify = function() {
                    macrotask.call(global, flush);
                  };
                }
              }
              module2.exports = queueMicrotask || function(fn) {
                var task = { fn, next: void 0 };
                if (last)
                  last.next = task;
                if (!head) {
                  head = task;
                  notify();
                }
                last = task;
              };
            }
          ),
          /***/
          "b622": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var shared = __webpack_require__("5692");
              var has = __webpack_require__("5135");
              var uid = __webpack_require__("90e3");
              var NATIVE_SYMBOL = __webpack_require__("4930");
              var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
              var WellKnownSymbolsStore = shared("wks");
              var Symbol2 = global.Symbol;
              var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol2 : Symbol2 && Symbol2.withoutSetter || uid;
              module2.exports = function(name) {
                if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == "string")) {
                  if (NATIVE_SYMBOL && has(Symbol2, name)) {
                    WellKnownSymbolsStore[name] = Symbol2[name];
                  } else {
                    WellKnownSymbolsStore[name] = createWellKnownSymbol("Symbol." + name);
                  }
                }
                return WellKnownSymbolsStore[name];
              };
            }
          ),
          /***/
          "b64b": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var $ = __webpack_require__("23e7");
              var toObject = __webpack_require__("7b0b");
              var nativeKeys = __webpack_require__("df75");
              var fails = __webpack_require__("d039");
              var FAILS_ON_PRIMITIVES = fails(function() {
                nativeKeys(1);
              });
              $({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES }, {
                keys: function keys(it) {
                  return nativeKeys(toObject(it));
                }
              });
            }
          ),
          /***/
          "b727": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var bind = __webpack_require__("0366");
              var IndexedObject = __webpack_require__("44ad");
              var toObject = __webpack_require__("7b0b");
              var toLength = __webpack_require__("50c4");
              var arraySpeciesCreate = __webpack_require__("65f0");
              var push = [].push;
              var createMethod = function(TYPE) {
                var IS_MAP = TYPE == 1;
                var IS_FILTER = TYPE == 2;
                var IS_SOME = TYPE == 3;
                var IS_EVERY = TYPE == 4;
                var IS_FIND_INDEX = TYPE == 6;
                var IS_FILTER_OUT = TYPE == 7;
                var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
                return function($this, callbackfn, that, specificCreate) {
                  var O = toObject($this);
                  var self2 = IndexedObject(O);
                  var boundFunction = bind(callbackfn, that, 3);
                  var length = toLength(self2.length);
                  var index = 0;
                  var create = specificCreate || arraySpeciesCreate;
                  var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : void 0;
                  var value, result;
                  for (; length > index; index++)
                    if (NO_HOLES || index in self2) {
                      value = self2[index];
                      result = boundFunction(value, index, O);
                      if (TYPE) {
                        if (IS_MAP)
                          target[index] = result;
                        else if (result)
                          switch (TYPE) {
                            case 3:
                              return true;
                            case 5:
                              return value;
                            case 6:
                              return index;
                            case 2:
                              push.call(target, value);
                          }
                        else
                          switch (TYPE) {
                            case 4:
                              return false;
                            case 7:
                              push.call(target, value);
                          }
                      }
                    }
                  return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
                };
              };
              module2.exports = {
                // `Array.prototype.forEach` method
                // https://tc39.es/ecma262/#sec-array.prototype.foreach
                forEach: createMethod(0),
                // `Array.prototype.map` method
                // https://tc39.es/ecma262/#sec-array.prototype.map
                map: createMethod(1),
                // `Array.prototype.filter` method
                // https://tc39.es/ecma262/#sec-array.prototype.filter
                filter: createMethod(2),
                // `Array.prototype.some` method
                // https://tc39.es/ecma262/#sec-array.prototype.some
                some: createMethod(3),
                // `Array.prototype.every` method
                // https://tc39.es/ecma262/#sec-array.prototype.every
                every: createMethod(4),
                // `Array.prototype.find` method
                // https://tc39.es/ecma262/#sec-array.prototype.find
                find: createMethod(5),
                // `Array.prototype.findIndex` method
                // https://tc39.es/ecma262/#sec-array.prototype.findIndex
                findIndex: createMethod(6),
                // `Array.prototype.filterOut` method
                // https://github.com/tc39/proposal-array-filtering
                filterOut: createMethod(7)
              };
            }
          ),
          /***/
          "c04e": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var isObject = __webpack_require__("861d");
              module2.exports = function(input, PREFERRED_STRING) {
                if (!isObject(input))
                  return input;
                var fn, val;
                if (PREFERRED_STRING && typeof (fn = input.toString) == "function" && !isObject(val = fn.call(input)))
                  return val;
                if (typeof (fn = input.valueOf) == "function" && !isObject(val = fn.call(input)))
                  return val;
                if (!PREFERRED_STRING && typeof (fn = input.toString) == "function" && !isObject(val = fn.call(input)))
                  return val;
                throw TypeError("Can't convert object to primitive value");
              };
            }
          ),
          /***/
          "c430": (
            /***/
            function(module2, exports2) {
              module2.exports = false;
            }
          ),
          /***/
          "c6b6": (
            /***/
            function(module2, exports2) {
              var toString = {}.toString;
              module2.exports = function(it) {
                return toString.call(it).slice(8, -1);
              };
            }
          ),
          /***/
          "c6cd": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var setGlobal = __webpack_require__("ce4e");
              var SHARED = "__core-js_shared__";
              var store = global[SHARED] || setGlobal(SHARED, {});
              module2.exports = store;
            }
          ),
          /***/
          "c8ba": (
            /***/
            function(module2, exports2) {
              var g;
              g = /* @__PURE__ */ function() {
                return this;
              }();
              try {
                g = g || new Function("return this")();
              } catch (e) {
                if (typeof window === "object")
                  g = window;
              }
              module2.exports = g;
            }
          ),
          /***/
          "ca84": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var has = __webpack_require__("5135");
              var toIndexedObject = __webpack_require__("fc6a");
              var indexOf = __webpack_require__("4d64").indexOf;
              var hiddenKeys = __webpack_require__("d012");
              module2.exports = function(object, names) {
                var O = toIndexedObject(object);
                var i = 0;
                var result = [];
                var key;
                for (key in O)
                  !has(hiddenKeys, key) && has(O, key) && result.push(key);
                while (names.length > i)
                  if (has(O, key = names[i++])) {
                    ~indexOf(result, key) || result.push(key);
                  }
                return result;
              };
            }
          ),
          /***/
          "caad": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $ = __webpack_require__("23e7");
              var $includes = __webpack_require__("4d64").includes;
              var addToUnscopables = __webpack_require__("44d2");
              $({ target: "Array", proto: true }, {
                includes: function includes(el) {
                  return $includes(this, el, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
              addToUnscopables("includes");
            }
          ),
          /***/
          "cc12": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var isObject = __webpack_require__("861d");
              var document2 = global.document;
              var EXISTS = isObject(document2) && isObject(document2.createElement);
              module2.exports = function(it) {
                return EXISTS ? document2.createElement(it) : {};
              };
            }
          ),
          /***/
          "cca6": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var $ = __webpack_require__("23e7");
              var assign = __webpack_require__("60da");
              $({ target: "Object", stat: true, forced: Object.assign !== assign }, {
                assign
              });
            }
          ),
          /***/
          "cdf9": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var anObject = __webpack_require__("825a");
              var isObject = __webpack_require__("861d");
              var newPromiseCapability = __webpack_require__("f069");
              module2.exports = function(C, x) {
                anObject(C);
                if (isObject(x) && x.constructor === C)
                  return x;
                var promiseCapability = newPromiseCapability.f(C);
                var resolve = promiseCapability.resolve;
                resolve(x);
                return promiseCapability.promise;
              };
            }
          ),
          /***/
          "ce4e": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              var createNonEnumerableProperty = __webpack_require__("9112");
              module2.exports = function(key, value) {
                try {
                  createNonEnumerableProperty(global, key, value);
                } catch (error) {
                  global[key] = value;
                }
                return value;
              };
            }
          ),
          /***/
          "d012": (
            /***/
            function(module2, exports2) {
              module2.exports = {};
            }
          ),
          /***/
          "d039": (
            /***/
            function(module2, exports2) {
              module2.exports = function(exec) {
                try {
                  return !!exec();
                } catch (error) {
                  return true;
                }
              };
            }
          ),
          /***/
          "d066": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var path = __webpack_require__("428f");
              var global = __webpack_require__("da84");
              var aFunction = function(variable) {
                return typeof variable == "function" ? variable : void 0;
              };
              module2.exports = function(namespace, method) {
                return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace]) : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
              };
            }
          ),
          /***/
          "d1e7": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
              var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
              var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);
              exports2.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
                var descriptor = getOwnPropertyDescriptor(this, V);
                return !!descriptor && descriptor.enumerable;
              } : nativePropertyIsEnumerable;
            }
          ),
          /***/
          "d3b7": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
              var redefine = __webpack_require__("6eeb");
              var toString = __webpack_require__("b041");
              if (!TO_STRING_TAG_SUPPORT) {
                redefine(Object.prototype, "toString", toString, { unsafe: true });
              }
            }
          ),
          /***/
          "d44e": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var defineProperty = __webpack_require__("9bf2").f;
              var has = __webpack_require__("5135");
              var wellKnownSymbol = __webpack_require__("b622");
              var TO_STRING_TAG = wellKnownSymbol("toStringTag");
              module2.exports = function(it, TAG, STATIC) {
                if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
                  defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
                }
              };
            }
          ),
          /***/
          "d784": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              __webpack_require__("ac1f");
              var redefine = __webpack_require__("6eeb");
              var fails = __webpack_require__("d039");
              var wellKnownSymbol = __webpack_require__("b622");
              var regexpExec = __webpack_require__("9263");
              var createNonEnumerableProperty = __webpack_require__("9112");
              var SPECIES = wellKnownSymbol("species");
              var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function() {
                var re = /./;
                re.exec = function() {
                  var result = [];
                  result.groups = { a: "7" };
                  return result;
                };
                return "".replace(re, "$<a>") !== "7";
              });
              var REPLACE_KEEPS_$0 = function() {
                return "a".replace(/./, "$0") === "$0";
              }();
              var REPLACE = wellKnownSymbol("replace");
              var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function() {
                if (/./[REPLACE]) {
                  return /./[REPLACE]("a", "$0") === "";
                }
                return false;
              }();
              var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function() {
                var re = /(?:)/;
                var originalExec = re.exec;
                re.exec = function() {
                  return originalExec.apply(this, arguments);
                };
                var result = "ab".split(re);
                return result.length !== 2 || result[0] !== "a" || result[1] !== "b";
              });
              module2.exports = function(KEY, length, exec, sham) {
                var SYMBOL = wellKnownSymbol(KEY);
                var DELEGATES_TO_SYMBOL = !fails(function() {
                  var O = {};
                  O[SYMBOL] = function() {
                    return 7;
                  };
                  return ""[KEY](O) != 7;
                });
                var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function() {
                  var execCalled = false;
                  var re = /a/;
                  if (KEY === "split") {
                    re = {};
                    re.constructor = {};
                    re.constructor[SPECIES] = function() {
                      return re;
                    };
                    re.flags = "";
                    re[SYMBOL] = /./[SYMBOL];
                  }
                  re.exec = function() {
                    execCalled = true;
                    return null;
                  };
                  re[SYMBOL]("");
                  return !execCalled;
                });
                if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === "replace" && !(REPLACE_SUPPORTS_NAMED_GROUPS && REPLACE_KEEPS_$0 && !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE) || KEY === "split" && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {
                  var nativeRegExpMethod = /./[SYMBOL];
                  var methods = exec(SYMBOL, ""[KEY], function(nativeMethod, regexp, str, arg2, forceStringMethod) {
                    if (regexp.exec === regexpExec) {
                      if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                        return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
                      }
                      return { done: true, value: nativeMethod.call(str, regexp, arg2) };
                    }
                    return { done: false };
                  }, {
                    REPLACE_KEEPS_$0,
                    REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
                  });
                  var stringMethod = methods[0];
                  var regexMethod = methods[1];
                  redefine(String.prototype, KEY, stringMethod);
                  redefine(
                    RegExp.prototype,
                    SYMBOL,
                    length == 2 ? function(string, arg) {
                      return regexMethod.call(string, this, arg);
                    } : function(string) {
                      return regexMethod.call(string, this);
                    }
                  );
                }
                if (sham)
                  createNonEnumerableProperty(RegExp.prototype[SYMBOL], "sham", true);
              };
            }
          ),
          /***/
          "da84": (
            /***/
            function(module2, exports2, __webpack_require__) {
              (function(global) {
                var check = function(it) {
                  return it && it.Math == Math && it;
                };
                module2.exports = /* global globalThis -- safe */
                check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || check(typeof self == "object" && self) || check(typeof global == "object" && global) || // eslint-disable-next-line no-new-func -- fallback
                /* @__PURE__ */ function() {
                  return this;
                }() || Function("return this")();
              }).call(this, __webpack_require__("c8ba"));
            }
          ),
          /***/
          "dbb4": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var $ = __webpack_require__("23e7");
              var DESCRIPTORS = __webpack_require__("83ab");
              var ownKeys = __webpack_require__("56ef");
              var toIndexedObject = __webpack_require__("fc6a");
              var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
              var createProperty = __webpack_require__("8418");
              $({ target: "Object", stat: true, sham: !DESCRIPTORS }, {
                getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
                  var O = toIndexedObject(object);
                  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                  var keys = ownKeys(O);
                  var result = {};
                  var index = 0;
                  var key, descriptor;
                  while (keys.length > index) {
                    descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
                    if (descriptor !== void 0)
                      createProperty(result, key, descriptor);
                  }
                  return result;
                }
              });
            }
          ),
          /***/
          "df75": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var internalObjectKeys = __webpack_require__("ca84");
              var enumBugKeys = __webpack_require__("7839");
              module2.exports = Object.keys || function keys(O) {
                return internalObjectKeys(O, enumBugKeys);
              };
            }
          ),
          /***/
          "e2cc": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var redefine = __webpack_require__("6eeb");
              module2.exports = function(target, src, options) {
                for (var key in src)
                  redefine(target, key, src[key], options);
                return target;
              };
            }
          ),
          /***/
          "e330": (
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VStep_vue_vue_type_style_index_0_id_54f9a632_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0fc8");
              var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VStep_vue_vue_type_style_index_0_id_54f9a632_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VStep_vue_vue_type_style_index_0_id_54f9a632_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
            }
          ),
          /***/
          "e439": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var $ = __webpack_require__("23e7");
              var fails = __webpack_require__("d039");
              var toIndexedObject = __webpack_require__("fc6a");
              var nativeGetOwnPropertyDescriptor = __webpack_require__("06cf").f;
              var DESCRIPTORS = __webpack_require__("83ab");
              var FAILS_ON_PRIMITIVES = fails(function() {
                nativeGetOwnPropertyDescriptor(1);
              });
              var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;
              $({ target: "Object", stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
                getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
                  return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
                }
              });
            }
          ),
          /***/
          "e538": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var wellKnownSymbol = __webpack_require__("b622");
              exports2.f = wellKnownSymbol;
            }
          ),
          /***/
          "e667": (
            /***/
            function(module2, exports2) {
              module2.exports = function(exec) {
                try {
                  return { error: false, value: exec() };
                } catch (error) {
                  return { error: true, value: error };
                }
              };
            }
          ),
          /***/
          "e6cf": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var $ = __webpack_require__("23e7");
              var IS_PURE = __webpack_require__("c430");
              var global = __webpack_require__("da84");
              var getBuiltIn = __webpack_require__("d066");
              var NativePromise = __webpack_require__("fea9");
              var redefine = __webpack_require__("6eeb");
              var redefineAll = __webpack_require__("e2cc");
              var setToStringTag = __webpack_require__("d44e");
              var setSpecies = __webpack_require__("2626");
              var isObject = __webpack_require__("861d");
              var aFunction = __webpack_require__("1c0b");
              var anInstance = __webpack_require__("19aa");
              var inspectSource = __webpack_require__("8925");
              var iterate = __webpack_require__("2266");
              var checkCorrectnessOfIteration = __webpack_require__("1c7e");
              var speciesConstructor = __webpack_require__("4840");
              var task = __webpack_require__("2cf4").set;
              var microtask = __webpack_require__("b575");
              var promiseResolve = __webpack_require__("cdf9");
              var hostReportErrors = __webpack_require__("44de");
              var newPromiseCapabilityModule = __webpack_require__("f069");
              var perform = __webpack_require__("e667");
              var InternalStateModule = __webpack_require__("69f3");
              var isForced = __webpack_require__("94ca");
              var wellKnownSymbol = __webpack_require__("b622");
              var IS_NODE = __webpack_require__("605d");
              var V8_VERSION = __webpack_require__("2d00");
              var SPECIES = wellKnownSymbol("species");
              var PROMISE = "Promise";
              var getInternalState = InternalStateModule.get;
              var setInternalState = InternalStateModule.set;
              var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
              var PromiseConstructor = NativePromise;
              var TypeError2 = global.TypeError;
              var document2 = global.document;
              var process = global.process;
              var $fetch = getBuiltIn("fetch");
              var newPromiseCapability = newPromiseCapabilityModule.f;
              var newGenericPromiseCapability = newPromiseCapability;
              var DISPATCH_EVENT = !!(document2 && document2.createEvent && global.dispatchEvent);
              var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == "function";
              var UNHANDLED_REJECTION = "unhandledrejection";
              var REJECTION_HANDLED = "rejectionhandled";
              var PENDING = 0;
              var FULFILLED = 1;
              var REJECTED = 2;
              var HANDLED = 1;
              var UNHANDLED = 2;
              var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;
              var FORCED = isForced(PROMISE, function() {
                var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
                if (!GLOBAL_CORE_JS_PROMISE) {
                  if (V8_VERSION === 66)
                    return true;
                  if (!IS_NODE && !NATIVE_REJECTION_EVENT)
                    return true;
                }
                if (IS_PURE && !PromiseConstructor.prototype["finally"])
                  return true;
                if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor))
                  return false;
                var promise = PromiseConstructor.resolve(1);
                var FakePromise = function(exec) {
                  exec(function() {
                  }, function() {
                  });
                };
                var constructor = promise.constructor = {};
                constructor[SPECIES] = FakePromise;
                return !(promise.then(function() {
                }) instanceof FakePromise);
              });
              var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function(iterable) {
                PromiseConstructor.all(iterable)["catch"](function() {
                });
              });
              var isThenable = function(it) {
                var then;
                return isObject(it) && typeof (then = it.then) == "function" ? then : false;
              };
              var notify = function(state, isReject) {
                if (state.notified)
                  return;
                state.notified = true;
                var chain = state.reactions;
                microtask(function() {
                  var value = state.value;
                  var ok = state.state == FULFILLED;
                  var index = 0;
                  while (chain.length > index) {
                    var reaction = chain[index++];
                    var handler = ok ? reaction.ok : reaction.fail;
                    var resolve = reaction.resolve;
                    var reject = reaction.reject;
                    var domain = reaction.domain;
                    var result, then, exited;
                    try {
                      if (handler) {
                        if (!ok) {
                          if (state.rejection === UNHANDLED)
                            onHandleUnhandled(state);
                          state.rejection = HANDLED;
                        }
                        if (handler === true)
                          result = value;
                        else {
                          if (domain)
                            domain.enter();
                          result = handler(value);
                          if (domain) {
                            domain.exit();
                            exited = true;
                          }
                        }
                        if (result === reaction.promise) {
                          reject(TypeError2("Promise-chain cycle"));
                        } else if (then = isThenable(result)) {
                          then.call(result, resolve, reject);
                        } else
                          resolve(result);
                      } else
                        reject(value);
                    } catch (error) {
                      if (domain && !exited)
                        domain.exit();
                      reject(error);
                    }
                  }
                  state.reactions = [];
                  state.notified = false;
                  if (isReject && !state.rejection)
                    onUnhandled(state);
                });
              };
              var dispatchEvent = function(name, promise, reason) {
                var event, handler;
                if (DISPATCH_EVENT) {
                  event = document2.createEvent("Event");
                  event.promise = promise;
                  event.reason = reason;
                  event.initEvent(name, false, true);
                  global.dispatchEvent(event);
                } else
                  event = { promise, reason };
                if (!NATIVE_REJECTION_EVENT && (handler = global["on" + name]))
                  handler(event);
                else if (name === UNHANDLED_REJECTION)
                  hostReportErrors("Unhandled promise rejection", reason);
              };
              var onUnhandled = function(state) {
                task.call(global, function() {
                  var promise = state.facade;
                  var value = state.value;
                  var IS_UNHANDLED = isUnhandled(state);
                  var result;
                  if (IS_UNHANDLED) {
                    result = perform(function() {
                      if (IS_NODE) {
                        process.emit("unhandledRejection", value, promise);
                      } else
                        dispatchEvent(UNHANDLED_REJECTION, promise, value);
                    });
                    state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
                    if (result.error)
                      throw result.value;
                  }
                });
              };
              var isUnhandled = function(state) {
                return state.rejection !== HANDLED && !state.parent;
              };
              var onHandleUnhandled = function(state) {
                task.call(global, function() {
                  var promise = state.facade;
                  if (IS_NODE) {
                    process.emit("rejectionHandled", promise);
                  } else
                    dispatchEvent(REJECTION_HANDLED, promise, state.value);
                });
              };
              var bind = function(fn, state, unwrap) {
                return function(value) {
                  fn(state, value, unwrap);
                };
              };
              var internalReject = function(state, value, unwrap) {
                if (state.done)
                  return;
                state.done = true;
                if (unwrap)
                  state = unwrap;
                state.value = value;
                state.state = REJECTED;
                notify(state, true);
              };
              var internalResolve = function(state, value, unwrap) {
                if (state.done)
                  return;
                state.done = true;
                if (unwrap)
                  state = unwrap;
                try {
                  if (state.facade === value)
                    throw TypeError2("Promise can't be resolved itself");
                  var then = isThenable(value);
                  if (then) {
                    microtask(function() {
                      var wrapper = { done: false };
                      try {
                        then.call(
                          value,
                          bind(internalResolve, wrapper, state),
                          bind(internalReject, wrapper, state)
                        );
                      } catch (error) {
                        internalReject(wrapper, error, state);
                      }
                    });
                  } else {
                    state.value = value;
                    state.state = FULFILLED;
                    notify(state, false);
                  }
                } catch (error) {
                  internalReject({ done: false }, error, state);
                }
              };
              if (FORCED) {
                PromiseConstructor = function Promise2(executor) {
                  anInstance(this, PromiseConstructor, PROMISE);
                  aFunction(executor);
                  Internal.call(this);
                  var state = getInternalState(this);
                  try {
                    executor(bind(internalResolve, state), bind(internalReject, state));
                  } catch (error) {
                    internalReject(state, error);
                  }
                };
                Internal = function Promise2(executor) {
                  setInternalState(this, {
                    type: PROMISE,
                    done: false,
                    notified: false,
                    parent: false,
                    reactions: [],
                    rejection: false,
                    state: PENDING,
                    value: void 0
                  });
                };
                Internal.prototype = redefineAll(PromiseConstructor.prototype, {
                  // `Promise.prototype.then` method
                  // https://tc39.es/ecma262/#sec-promise.prototype.then
                  then: function then(onFulfilled, onRejected) {
                    var state = getInternalPromiseState(this);
                    var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
                    reaction.ok = typeof onFulfilled == "function" ? onFulfilled : true;
                    reaction.fail = typeof onRejected == "function" && onRejected;
                    reaction.domain = IS_NODE ? process.domain : void 0;
                    state.parent = true;
                    state.reactions.push(reaction);
                    if (state.state != PENDING)
                      notify(state, false);
                    return reaction.promise;
                  },
                  // `Promise.prototype.catch` method
                  // https://tc39.es/ecma262/#sec-promise.prototype.catch
                  "catch": function(onRejected) {
                    return this.then(void 0, onRejected);
                  }
                });
                OwnPromiseCapability = function() {
                  var promise = new Internal();
                  var state = getInternalState(promise);
                  this.promise = promise;
                  this.resolve = bind(internalResolve, state);
                  this.reject = bind(internalReject, state);
                };
                newPromiseCapabilityModule.f = newPromiseCapability = function(C) {
                  return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
                };
                if (!IS_PURE && typeof NativePromise == "function") {
                  nativeThen = NativePromise.prototype.then;
                  redefine(NativePromise.prototype, "then", function then(onFulfilled, onRejected) {
                    var that = this;
                    return new PromiseConstructor(function(resolve, reject) {
                      nativeThen.call(that, resolve, reject);
                    }).then(onFulfilled, onRejected);
                  }, { unsafe: true });
                  if (typeof $fetch == "function")
                    $({ global: true, enumerable: true, forced: true }, {
                      // eslint-disable-next-line no-unused-vars -- required for `.length`
                      fetch: function fetch(input) {
                        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
                      }
                    });
                }
              }
              $({ global: true, wrap: true, forced: FORCED }, {
                Promise: PromiseConstructor
              });
              setToStringTag(PromiseConstructor, PROMISE, false, true);
              setSpecies(PROMISE);
              PromiseWrapper = getBuiltIn(PROMISE);
              $({ target: PROMISE, stat: true, forced: FORCED }, {
                // `Promise.reject` method
                // https://tc39.es/ecma262/#sec-promise.reject
                reject: function reject(r) {
                  var capability = newPromiseCapability(this);
                  capability.reject.call(void 0, r);
                  return capability.promise;
                }
              });
              $({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
                // `Promise.resolve` method
                // https://tc39.es/ecma262/#sec-promise.resolve
                resolve: function resolve(x) {
                  return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
                }
              });
              $({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
                // `Promise.all` method
                // https://tc39.es/ecma262/#sec-promise.all
                all: function all(iterable) {
                  var C = this;
                  var capability = newPromiseCapability(C);
                  var resolve = capability.resolve;
                  var reject = capability.reject;
                  var result = perform(function() {
                    var $promiseResolve = aFunction(C.resolve);
                    var values = [];
                    var counter = 0;
                    var remaining = 1;
                    iterate(iterable, function(promise) {
                      var index = counter++;
                      var alreadyCalled = false;
                      values.push(void 0);
                      remaining++;
                      $promiseResolve.call(C, promise).then(function(value) {
                        if (alreadyCalled)
                          return;
                        alreadyCalled = true;
                        values[index] = value;
                        --remaining || resolve(values);
                      }, reject);
                    });
                    --remaining || resolve(values);
                  });
                  if (result.error)
                    reject(result.value);
                  return capability.promise;
                },
                // `Promise.race` method
                // https://tc39.es/ecma262/#sec-promise.race
                race: function race(iterable) {
                  var C = this;
                  var capability = newPromiseCapability(C);
                  var reject = capability.reject;
                  var result = perform(function() {
                    var $promiseResolve = aFunction(C.resolve);
                    iterate(iterable, function(promise) {
                      $promiseResolve.call(C, promise).then(capability.resolve, reject);
                    });
                  });
                  if (result.error)
                    reject(result.value);
                  return capability.promise;
                }
              });
            }
          ),
          /***/
          "e893": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var has = __webpack_require__("5135");
              var ownKeys = __webpack_require__("56ef");
              var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
              var definePropertyModule = __webpack_require__("9bf2");
              module2.exports = function(target, source) {
                var keys = ownKeys(source);
                var defineProperty = definePropertyModule.f;
                var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                for (var i = 0; i < keys.length; i++) {
                  var key = keys[i];
                  if (!has(target, key))
                    defineProperty(target, key, getOwnPropertyDescriptor(source, key));
                }
              };
            }
          ),
          /***/
          "e8b5": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var classof = __webpack_require__("c6b6");
              module2.exports = Array.isArray || function isArray(arg) {
                return classof(arg) == "Array";
              };
            }
          ),
          /***/
          "e95a": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var wellKnownSymbol = __webpack_require__("b622");
              var Iterators = __webpack_require__("3f8c");
              var ITERATOR = wellKnownSymbol("iterator");
              var ArrayPrototype = Array.prototype;
              module2.exports = function(it) {
                return it !== void 0 && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
              };
            }
          ),
          /***/
          "f069": (
            /***/
            function(module2, exports2, __webpack_require__) {
              "use strict";
              var aFunction = __webpack_require__("1c0b");
              var PromiseCapability = function(C) {
                var resolve, reject;
                this.promise = new C(function($$resolve, $$reject) {
                  if (resolve !== void 0 || reject !== void 0)
                    throw TypeError("Bad Promise constructor");
                  resolve = $$resolve;
                  reject = $$reject;
                });
                this.resolve = aFunction(resolve);
                this.reject = aFunction(reject);
              };
              module2.exports.f = function(C) {
                return new PromiseCapability(C);
              };
            }
          ),
          /***/
          "f5df": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
              var classofRaw = __webpack_require__("c6b6");
              var wellKnownSymbol = __webpack_require__("b622");
              var TO_STRING_TAG = wellKnownSymbol("toStringTag");
              var CORRECT_ARGUMENTS = classofRaw(/* @__PURE__ */ function() {
                return arguments;
              }()) == "Arguments";
              var tryGet = function(it, key) {
                try {
                  return it[key];
                } catch (error) {
                }
              };
              module2.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function(it) {
                var O, tag, result;
                return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) == "Object" && typeof O.callee == "function" ? "Arguments" : result;
              };
            }
          ),
          /***/
          "f772": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var shared = __webpack_require__("5692");
              var uid = __webpack_require__("90e3");
              var keys = shared("keys");
              module2.exports = function(key) {
                return keys[key] || (keys[key] = uid(key));
              };
            }
          ),
          /***/
          "fb15": (
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              if (typeof window !== "undefined") {
                var currentScript = window.document.currentScript;
                if (true) {
                  var getCurrentScript = __webpack_require__("8875");
                  currentScript = getCurrentScript();
                  if (!("currentScript" in document)) {
                    Object.defineProperty(document, "currentScript", { get: getCurrentScript });
                  }
                }
                var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
                if (src) {
                  __webpack_require__.p = src[1];
                }
              }
              var setPublicPath = null;
              var es_function_name = __webpack_require__("b0c0");
              var render = function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("div", { staticClass: "v-tour" }, [_vm._t("default", [_vm.steps[_vm.currentStep] ? _c("v-step", { key: _vm.currentStep, attrs: { "step": _vm.steps[_vm.currentStep], "previous-step": _vm.previousStep, "next-step": _vm.nextStep, "stop": _vm.stop, "skip": _vm.skip, "finish": _vm.finish, "is-first": _vm.isFirst, "is-last": _vm.isLast, "labels": _vm.customOptions.labels, "enabled-buttons": _vm.customOptions.enabledButtons, "highlight": _vm.customOptions.highlight, "stop-on-fail": _vm.customOptions.stopOnTargetNotFound, "debug": _vm.customOptions.debug }, on: { "targetNotFound": function($event) {
                  return _vm.$emit("targetNotFound", $event);
                } } }) : _vm._e()], { "currentStep": _vm.currentStep, "steps": _vm.steps, "previousStep": _vm.previousStep, "nextStep": _vm.nextStep, "stop": _vm.stop, "skip": _vm.skip, "finish": _vm.finish, "isFirst": _vm.isFirst, "isLast": _vm.isLast, "labels": _vm.customOptions.labels, "enabledButtons": _vm.customOptions.enabledButtons, "highlight": _vm.customOptions.highlight, "debug": _vm.customOptions.debug })], 2);
              };
              var staticRenderFns = [];
              var es_promise = __webpack_require__("e6cf");
              var es_object_to_string = __webpack_require__("d3b7");
              function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  Promise.resolve(value).then(_next, _throw);
                }
              }
              function _asyncToGenerator(fn) {
                return function() {
                  var self2 = this, args = arguments;
                  return new Promise(function(resolve, reject) {
                    var gen = fn.apply(self2, args);
                    function _next(value) {
                      asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                    }
                    function _throw(err) {
                      asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                    }
                    _next(void 0);
                  });
                };
              }
              var es_object_keys = __webpack_require__("b64b");
              var es_symbol = __webpack_require__("a4d3");
              var es_array_filter = __webpack_require__("4de4");
              var es_object_get_own_property_descriptor = __webpack_require__("e439");
              var web_dom_collections_for_each = __webpack_require__("159b");
              var es_object_get_own_property_descriptors = __webpack_require__("dbb4");
              function _defineProperty(obj, key, value) {
                if (key in obj) {
                  Object.defineProperty(obj, key, {
                    value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                  });
                } else {
                  obj[key] = value;
                }
                return obj;
              }
              function ownKeys(object, enumerableOnly) {
                var keys = Object.keys(object);
                if (Object.getOwnPropertySymbols) {
                  var symbols = Object.getOwnPropertySymbols(object);
                  if (enumerableOnly)
                    symbols = symbols.filter(function(sym) {
                      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                    });
                  keys.push.apply(keys, symbols);
                }
                return keys;
              }
              function _objectSpread2(target) {
                for (var i = 1; i < arguments.length; i++) {
                  var source = arguments[i] != null ? arguments[i] : {};
                  if (i % 2) {
                    ownKeys(Object(source), true).forEach(function(key) {
                      _defineProperty(target, key, source[key]);
                    });
                  } else if (Object.getOwnPropertyDescriptors) {
                    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
                  } else {
                    ownKeys(Object(source)).forEach(function(key) {
                      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                    });
                  }
                }
                return target;
              }
              var runtime = __webpack_require__("96cf");
              var DEFAULT_CALLBACKS = {
                onStart: function onStart() {
                },
                onPreviousStep: function onPreviousStep(currentStep) {
                },
                onNextStep: function onNextStep(currentStep) {
                },
                onStop: function onStop() {
                },
                onSkip: function onSkip() {
                },
                onFinish: function onFinish() {
                }
              };
              var DEFAULT_OPTIONS = {
                highlight: false,
                labels: {
                  buttonSkip: "Skip tour",
                  buttonPrevious: "Previous",
                  buttonNext: "Next",
                  buttonStop: "Finish"
                },
                enabledButtons: {
                  buttonSkip: true,
                  buttonPrevious: true,
                  buttonNext: true,
                  buttonStop: true
                },
                startTimeout: 0,
                stopOnTargetNotFound: true,
                useKeyboardNavigation: true,
                enabledNavigationKeys: {
                  escape: true,
                  arrowRight: true,
                  arrowLeft: true
                },
                debug: false
              };
              var HIGHLIGHT = {
                classes: {
                  active: "v-tour--active",
                  targetHighlighted: "v-tour__target--highlighted",
                  targetRelative: "v-tour__target--relative"
                },
                transition: "box-shadow 0s ease-in-out 0s"
              };
              var DEFAULT_STEP_OPTIONS = {
                enableScrolling: true,
                highlight: DEFAULT_OPTIONS.highlight,
                // By default use the global tour setting
                enabledButtons: DEFAULT_OPTIONS.enabledButtons,
                modifiers: [{
                  name: "arrow",
                  options: {
                    element: ".v-step__arrow",
                    padding: 10
                  }
                }, {
                  name: "preventOverflow",
                  options: {
                    rootBoundary: "window"
                  }
                }, {
                  name: "offset",
                  options: {
                    offset: [0, 10]
                  }
                }],
                placement: "bottom"
              };
              var KEYS = {
                ARROW_RIGHT: 39,
                ARROW_LEFT: 37,
                ESCAPE: 27
              };
              var VTourvue_type_script_lang_js_ = {
                name: "v-tour",
                props: {
                  steps: {
                    type: Array,
                    default: function _default() {
                      return [];
                    }
                  },
                  name: {
                    type: String
                  },
                  options: {
                    type: Object,
                    default: function _default() {
                      return DEFAULT_OPTIONS;
                    }
                  },
                  callbacks: {
                    type: Object,
                    default: function _default() {
                      return DEFAULT_CALLBACKS;
                    }
                  }
                },
                data: function data() {
                  return {
                    currentStep: -1
                  };
                },
                mounted: function mounted() {
                  this.$tours[this.name] = this;
                },
                beforeDestroy: function beforeDestroy() {
                  if (this.customOptions.useKeyboardNavigation) {
                    window.removeEventListener("keyup", this.handleKeyup);
                  }
                },
                computed: {
                  // Allow us to define custom options and merge them with the default options.
                  // Since options is a computed property, it is reactive and can be updated during runtime.
                  customOptions: function customOptions() {
                    return _objectSpread2(_objectSpread2({}, DEFAULT_OPTIONS), this.options);
                  },
                  customCallbacks: function customCallbacks() {
                    return _objectSpread2(_objectSpread2({}, DEFAULT_CALLBACKS), this.callbacks);
                  },
                  // Return true if the tour is active, which means that there's a VStep displayed
                  isRunning: function isRunning() {
                    return this.currentStep > -1 && this.currentStep < this.numberOfSteps;
                  },
                  isFirst: function isFirst() {
                    return this.currentStep === 0;
                  },
                  isLast: function isLast() {
                    return this.currentStep === this.steps.length - 1;
                  },
                  numberOfSteps: function numberOfSteps() {
                    return this.steps.length;
                  },
                  step: function step() {
                    return this.steps[this.currentStep];
                  }
                },
                methods: {
                  start: function start(startStep) {
                    var _this = this;
                    return _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                      var step, process;
                      return regeneratorRuntime.wrap(function _callee$(_context) {
                        while (1) {
                          switch (_context.prev = _context.next) {
                            case 0:
                              if (_this.customOptions.useKeyboardNavigation) {
                                window.addEventListener("keyup", _this.handleKeyup);
                              }
                              startStep = typeof startStep !== "undefined" ? parseInt(startStep, 10) : 0;
                              step = _this.steps[startStep];
                              process = function process2() {
                                return new Promise(function(resolve, reject) {
                                  setTimeout(function() {
                                    _this.customCallbacks.onStart();
                                    _this.currentStep = startStep;
                                    resolve();
                                  }, _this.customOptions.startTimeout);
                                });
                              };
                              if (!(typeof step.before !== "undefined")) {
                                _context.next = 13;
                                break;
                              }
                              _context.prev = 5;
                              _context.next = 8;
                              return step.before("start");
                            case 8:
                              _context.next = 13;
                              break;
                            case 10:
                              _context.prev = 10;
                              _context.t0 = _context["catch"](5);
                              return _context.abrupt("return", Promise.reject(_context.t0));
                            case 13:
                              _context.next = 15;
                              return process();
                            case 15:
                              return _context.abrupt("return", Promise.resolve());
                            case 16:
                            case "end":
                              return _context.stop();
                          }
                        }
                      }, _callee, null, [[5, 10]]);
                    }))();
                  },
                  previousStep: function previousStep() {
                    var _this2 = this;
                    return _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                      var futureStep, process, step;
                      return regeneratorRuntime.wrap(function _callee2$(_context2) {
                        while (1) {
                          switch (_context2.prev = _context2.next) {
                            case 0:
                              futureStep = _this2.currentStep - 1;
                              process = function process2() {
                                return new Promise(function(resolve, reject) {
                                  _this2.customCallbacks.onPreviousStep(_this2.currentStep);
                                  _this2.currentStep = futureStep;
                                  resolve();
                                });
                              };
                              if (!(futureStep > -1)) {
                                _context2.next = 15;
                                break;
                              }
                              step = _this2.steps[futureStep];
                              if (!(typeof step.before !== "undefined")) {
                                _context2.next = 13;
                                break;
                              }
                              _context2.prev = 5;
                              _context2.next = 8;
                              return step.before("previous");
                            case 8:
                              _context2.next = 13;
                              break;
                            case 10:
                              _context2.prev = 10;
                              _context2.t0 = _context2["catch"](5);
                              return _context2.abrupt("return", Promise.reject(_context2.t0));
                            case 13:
                              _context2.next = 15;
                              return process();
                            case 15:
                              return _context2.abrupt("return", Promise.resolve());
                            case 16:
                            case "end":
                              return _context2.stop();
                          }
                        }
                      }, _callee2, null, [[5, 10]]);
                    }))();
                  },
                  nextStep: function nextStep() {
                    var _this3 = this;
                    return _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                      var futureStep, process, step;
                      return regeneratorRuntime.wrap(function _callee3$(_context3) {
                        while (1) {
                          switch (_context3.prev = _context3.next) {
                            case 0:
                              futureStep = _this3.currentStep + 1;
                              process = function process2() {
                                return new Promise(function(resolve, reject) {
                                  _this3.customCallbacks.onNextStep(_this3.currentStep);
                                  _this3.currentStep = futureStep;
                                  resolve();
                                });
                              };
                              if (!(futureStep < _this3.numberOfSteps && _this3.currentStep !== -1)) {
                                _context3.next = 15;
                                break;
                              }
                              step = _this3.steps[futureStep];
                              if (!(typeof step.before !== "undefined")) {
                                _context3.next = 13;
                                break;
                              }
                              _context3.prev = 5;
                              _context3.next = 8;
                              return step.before("next");
                            case 8:
                              _context3.next = 13;
                              break;
                            case 10:
                              _context3.prev = 10;
                              _context3.t0 = _context3["catch"](5);
                              return _context3.abrupt("return", Promise.reject(_context3.t0));
                            case 13:
                              _context3.next = 15;
                              return process();
                            case 15:
                              return _context3.abrupt("return", Promise.resolve());
                            case 16:
                            case "end":
                              return _context3.stop();
                          }
                        }
                      }, _callee3, null, [[5, 10]]);
                    }))();
                  },
                  stop: function stop() {
                    this.customCallbacks.onStop();
                    document.body.classList.remove("v-tour--active");
                    this.currentStep = -1;
                  },
                  skip: function skip() {
                    this.customCallbacks.onSkip();
                    this.stop();
                  },
                  finish: function finish() {
                    this.customCallbacks.onFinish();
                    this.stop();
                  },
                  handleKeyup: function handleKeyup(e) {
                    if (this.customOptions.debug) {
                      console.log("[Vue Tour] A keyup event occured:", e);
                    }
                    switch (e.keyCode) {
                      case KEYS.ARROW_RIGHT:
                        this.isKeyEnabled("arrowRight") && this.nextStep();
                        break;
                      case KEYS.ARROW_LEFT:
                        this.isKeyEnabled("arrowLeft") && this.previousStep();
                        break;
                      case KEYS.ESCAPE:
                        this.isKeyEnabled("escape") && this.stop();
                        break;
                    }
                  },
                  isKeyEnabled: function isKeyEnabled(key) {
                    var enabledNavigationKeys = this.customOptions.enabledNavigationKeys;
                    return enabledNavigationKeys.hasOwnProperty(key) ? enabledNavigationKeys[key] : true;
                  }
                }
              };
              var components_VTourvue_type_script_lang_js_ = VTourvue_type_script_lang_js_;
              var VTourvue_type_style_index_0_lang_scss_ = __webpack_require__("07e8");
              function normalizeComponent(scriptExports, render2, staticRenderFns2, functionalTemplate, injectStyles, scopeId, moduleIdentifier, shadowMode) {
                var options = typeof scriptExports === "function" ? scriptExports.options : scriptExports;
                if (render2) {
                  options.render = render2;
                  options.staticRenderFns = staticRenderFns2;
                  options._compiled = true;
                }
                if (functionalTemplate) {
                  options.functional = true;
                }
                if (scopeId) {
                  options._scopeId = "data-v-" + scopeId;
                }
                var hook;
                if (moduleIdentifier) {
                  hook = function(context) {
                    context = context || // cached call
                    this.$vnode && this.$vnode.ssrContext || // stateful
                    this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext;
                    if (!context && typeof __VUE_SSR_CONTEXT__ !== "undefined") {
                      context = __VUE_SSR_CONTEXT__;
                    }
                    if (injectStyles) {
                      injectStyles.call(this, context);
                    }
                    if (context && context._registeredComponents) {
                      context._registeredComponents.add(moduleIdentifier);
                    }
                  };
                  options._ssrRegister = hook;
                } else if (injectStyles) {
                  hook = shadowMode ? function() {
                    injectStyles.call(
                      this,
                      (options.functional ? this.parent : this).$root.$options.shadowRoot
                    );
                  } : injectStyles;
                }
                if (hook) {
                  if (options.functional) {
                    options._injectStyles = hook;
                    var originalRender = options.render;
                    options.render = function renderWithStyleInjection(h, context) {
                      hook.call(context);
                      return originalRender(h, context);
                    };
                  } else {
                    var existing = options.beforeCreate;
                    options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
                  }
                }
                return {
                  exports: scriptExports,
                  options
                };
              }
              var component = normalizeComponent(
                components_VTourvue_type_script_lang_js_,
                render,
                staticRenderFns,
                false,
                null,
                null,
                null
              );
              var VTour = component.exports;
              var VStepvue_type_template_id_54f9a632_scoped_true_render = function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("div", { ref: "v-step-" + _vm.hash, staticClass: "v-step", class: { "v-step--sticky": _vm.isSticky }, attrs: { "id": "v-step-" + _vm.hash } }, [_vm._t("header", [_vm.step.header ? _c("div", { staticClass: "v-step__header" }, [_vm.step.header.title ? _c("div", { domProps: { "innerHTML": _vm._s(_vm.step.header.title) } }) : _vm._e()]) : _vm._e()]), _vm._t("content", [_c("div", { staticClass: "v-step__content" }, [_vm.step.content ? _c("div", { domProps: { "innerHTML": _vm._s(_vm.step.content) } }) : _c("div", [_vm._v("This is a demo step! The id of this step is " + _vm._s(_vm.hash) + " and it targets " + _vm._s(_vm.step.target) + ".")])])]), _vm._t("actions", [_c("div", { staticClass: "v-step__buttons" }, [!_vm.isLast && _vm.isButtonEnabled("buttonSkip") ? _c("button", { staticClass: "v-step__button v-step__button-skip", on: { "click": function($event) {
                  $event.preventDefault();
                  return _vm.skip($event);
                } } }, [_vm._v(_vm._s(_vm.labels.buttonSkip))]) : _vm._e(), !_vm.isFirst && _vm.isButtonEnabled("buttonPrevious") ? _c("button", { staticClass: "v-step__button v-step__button-previous", on: { "click": function($event) {
                  $event.preventDefault();
                  return _vm.previousStep($event);
                } } }, [_vm._v(_vm._s(_vm.labels.buttonPrevious))]) : _vm._e(), !_vm.isLast && _vm.isButtonEnabled("buttonNext") ? _c("button", { staticClass: "v-step__button v-step__button-next", on: { "click": function($event) {
                  $event.preventDefault();
                  return _vm.nextStep($event);
                } } }, [_vm._v(_vm._s(_vm.labels.buttonNext))]) : _vm._e(), _vm.isLast && _vm.isButtonEnabled("buttonStop") ? _c("button", { staticClass: "v-step__button v-step__button-stop", on: { "click": function($event) {
                  $event.preventDefault();
                  return _vm.finish($event);
                } } }, [_vm._v(_vm._s(_vm.labels.buttonStop))]) : _vm._e()])]), _c("div", { staticClass: "v-step__arrow", class: { "v-step__arrow--dark": _vm.step.header && _vm.step.header.title }, attrs: { "data-popper-arrow": "" } })], 2);
              };
              var VStepvue_type_template_id_54f9a632_scoped_true_staticRenderFns = [];
              var es_object_assign = __webpack_require__("cca6");
              var es_array_concat = __webpack_require__("99af");
              var es_array_includes = __webpack_require__("caad");
              var es_string_includes = __webpack_require__("2532");
              var es_string_replace = __webpack_require__("5319");
              var es_regexp_exec = __webpack_require__("ac1f");
              function getBoundingClientRect(element) {
                var rect = element.getBoundingClientRect();
                return {
                  width: rect.width,
                  height: rect.height,
                  top: rect.top,
                  right: rect.right,
                  bottom: rect.bottom,
                  left: rect.left,
                  x: rect.left,
                  y: rect.top
                };
              }
              function getWindow(node) {
                if (node == null) {
                  return window;
                }
                if (node.toString() !== "[object Window]") {
                  var ownerDocument = node.ownerDocument;
                  return ownerDocument ? ownerDocument.defaultView || window : window;
                }
                return node;
              }
              function getWindowScroll(node) {
                var win = getWindow(node);
                var scrollLeft = win.pageXOffset;
                var scrollTop = win.pageYOffset;
                return {
                  scrollLeft,
                  scrollTop
                };
              }
              function isElement(node) {
                var OwnElement = getWindow(node).Element;
                return node instanceof OwnElement || node instanceof Element;
              }
              function isHTMLElement(node) {
                var OwnElement = getWindow(node).HTMLElement;
                return node instanceof OwnElement || node instanceof HTMLElement;
              }
              function isShadowRoot(node) {
                if (typeof ShadowRoot === "undefined") {
                  return false;
                }
                var OwnElement = getWindow(node).ShadowRoot;
                return node instanceof OwnElement || node instanceof ShadowRoot;
              }
              function getHTMLElementScroll(element) {
                return {
                  scrollLeft: element.scrollLeft,
                  scrollTop: element.scrollTop
                };
              }
              function getNodeScroll(node) {
                if (node === getWindow(node) || !isHTMLElement(node)) {
                  return getWindowScroll(node);
                } else {
                  return getHTMLElementScroll(node);
                }
              }
              function getNodeName(element) {
                return element ? (element.nodeName || "").toLowerCase() : null;
              }
              function getDocumentElement(element) {
                return ((isElement(element) ? element.ownerDocument : (
                  // $FlowFixMe[prop-missing]
                  element.document
                )) || window.document).documentElement;
              }
              function getWindowScrollBarX(element) {
                return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
              }
              function getComputedStyle(element) {
                return getWindow(element).getComputedStyle(element);
              }
              function isScrollParent(element) {
                var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
                return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
              }
              function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
                if (isFixed === void 0) {
                  isFixed = false;
                }
                var documentElement = getDocumentElement(offsetParent);
                var rect = getBoundingClientRect(elementOrVirtualElement);
                var isOffsetParentAnElement = isHTMLElement(offsetParent);
                var scroll = {
                  scrollLeft: 0,
                  scrollTop: 0
                };
                var offsets = {
                  x: 0,
                  y: 0
                };
                if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
                  if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
                  isScrollParent(documentElement)) {
                    scroll = getNodeScroll(offsetParent);
                  }
                  if (isHTMLElement(offsetParent)) {
                    offsets = getBoundingClientRect(offsetParent);
                    offsets.x += offsetParent.clientLeft;
                    offsets.y += offsetParent.clientTop;
                  } else if (documentElement) {
                    offsets.x = getWindowScrollBarX(documentElement);
                  }
                }
                return {
                  x: rect.left + scroll.scrollLeft - offsets.x,
                  y: rect.top + scroll.scrollTop - offsets.y,
                  width: rect.width,
                  height: rect.height
                };
              }
              function getLayoutRect(element) {
                var clientRect = getBoundingClientRect(element);
                var width = element.offsetWidth;
                var height = element.offsetHeight;
                if (Math.abs(clientRect.width - width) <= 1) {
                  width = clientRect.width;
                }
                if (Math.abs(clientRect.height - height) <= 1) {
                  height = clientRect.height;
                }
                return {
                  x: element.offsetLeft,
                  y: element.offsetTop,
                  width,
                  height
                };
              }
              function getParentNode(element) {
                if (getNodeName(element) === "html") {
                  return element;
                }
                return (
                  // this is a quicker (but less type safe) way to save quite some bytes from the bundle
                  // $FlowFixMe[incompatible-return]
                  // $FlowFixMe[prop-missing]
                  element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
                  element.parentNode || // DOM Element detected
                  (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
                  // $FlowFixMe[incompatible-call]: HTMLElement is a Node
                  getDocumentElement(element)
                );
              }
              function getScrollParent(node) {
                if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
                  return node.ownerDocument.body;
                }
                if (isHTMLElement(node) && isScrollParent(node)) {
                  return node;
                }
                return getScrollParent(getParentNode(node));
              }
              function listScrollParents(element, list) {
                var _element$ownerDocumen;
                if (list === void 0) {
                  list = [];
                }
                var scrollParent = getScrollParent(element);
                var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
                var win = getWindow(scrollParent);
                var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
                var updatedList = list.concat(target);
                return isBody ? updatedList : (
                  // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
                  updatedList.concat(listScrollParents(getParentNode(target)))
                );
              }
              function isTableElement(element) {
                return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
              }
              function getTrueOffsetParent(element) {
                if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
                getComputedStyle(element).position === "fixed") {
                  return null;
                }
                return element.offsetParent;
              }
              function getContainingBlock(element) {
                var isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
                var currentNode = getParentNode(element);
                while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
                  var css = getComputedStyle(currentNode);
                  if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
                    return currentNode;
                  } else {
                    currentNode = currentNode.parentNode;
                  }
                }
                return null;
              }
              function getOffsetParent(element) {
                var window2 = getWindow(element);
                var offsetParent = getTrueOffsetParent(element);
                while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
                  offsetParent = getTrueOffsetParent(offsetParent);
                }
                if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static")) {
                  return window2;
                }
                return offsetParent || getContainingBlock(element) || window2;
              }
              var enums_top = "top";
              var bottom = "bottom";
              var right = "right";
              var left = "left";
              var auto = "auto";
              var basePlacements = [enums_top, bottom, right, left];
              var enums_start = "start";
              var end = "end";
              var enums_clippingParents = "clippingParents";
              var viewport = "viewport";
              var enums_popper = "popper";
              var enums_reference = "reference";
              var variationPlacements = basePlacements.reduce(function(acc, placement) {
                return acc.concat([placement + "-" + enums_start, placement + "-" + end]);
              }, []);
              var enums_placements = [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
                return acc.concat([placement, placement + "-" + enums_start, placement + "-" + end]);
              }, []);
              var beforeRead = "beforeRead";
              var read = "read";
              var afterRead = "afterRead";
              var beforeMain = "beforeMain";
              var main = "main";
              var afterMain = "afterMain";
              var beforeWrite = "beforeWrite";
              var write = "write";
              var afterWrite = "afterWrite";
              var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
              function order(modifiers) {
                var map = /* @__PURE__ */ new Map();
                var visited = /* @__PURE__ */ new Set();
                var result = [];
                modifiers.forEach(function(modifier) {
                  map.set(modifier.name, modifier);
                });
                function sort(modifier) {
                  visited.add(modifier.name);
                  var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
                  requires.forEach(function(dep) {
                    if (!visited.has(dep)) {
                      var depModifier = map.get(dep);
                      if (depModifier) {
                        sort(depModifier);
                      }
                    }
                  });
                  result.push(modifier);
                }
                modifiers.forEach(function(modifier) {
                  if (!visited.has(modifier.name)) {
                    sort(modifier);
                  }
                });
                return result;
              }
              function orderModifiers(modifiers) {
                var orderedModifiers = order(modifiers);
                return modifierPhases.reduce(function(acc, phase) {
                  return acc.concat(orderedModifiers.filter(function(modifier) {
                    return modifier.phase === phase;
                  }));
                }, []);
              }
              function debounce(fn) {
                var pending;
                return function() {
                  if (!pending) {
                    pending = new Promise(function(resolve) {
                      Promise.resolve().then(function() {
                        pending = void 0;
                        resolve(fn());
                      });
                    });
                  }
                  return pending;
                };
              }
              function mergeByName(modifiers) {
                var merged = modifiers.reduce(function(merged2, current) {
                  var existing = merged2[current.name];
                  merged2[current.name] = existing ? Object.assign({}, existing, current, {
                    options: Object.assign({}, existing.options, current.options),
                    data: Object.assign({}, existing.data, current.data)
                  }) : current;
                  return merged2;
                }, {});
                return Object.keys(merged).map(function(key) {
                  return merged[key];
                });
              }
              var INVALID_ELEMENT_ERROR = "Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.";
              var INFINITE_LOOP_ERROR = "Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.";
              var createPopper_DEFAULT_OPTIONS = {
                placement: "bottom",
                modifiers: [],
                strategy: "absolute"
              };
              function areValidElements() {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                  args[_key] = arguments[_key];
                }
                return !args.some(function(element) {
                  return !(element && typeof element.getBoundingClientRect === "function");
                });
              }
              function popperGenerator(generatorOptions) {
                if (generatorOptions === void 0) {
                  generatorOptions = {};
                }
                var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? createPopper_DEFAULT_OPTIONS : _generatorOptions$def2;
                return function createPopper(reference, popper, options) {
                  if (options === void 0) {
                    options = defaultOptions;
                  }
                  var state = {
                    placement: "bottom",
                    orderedModifiers: [],
                    options: Object.assign({}, createPopper_DEFAULT_OPTIONS, defaultOptions),
                    modifiersData: {},
                    elements: {
                      reference,
                      popper
                    },
                    attributes: {},
                    styles: {}
                  };
                  var effectCleanupFns = [];
                  var isDestroyed = false;
                  var instance = {
                    state,
                    setOptions: function setOptions(options2) {
                      cleanupModifierEffects();
                      state.options = Object.assign({}, defaultOptions, state.options, options2);
                      state.scrollParents = {
                        reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
                        popper: listScrollParents(popper)
                      };
                      var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers)));
                      state.orderedModifiers = orderedModifiers.filter(function(m) {
                        return m.enabled;
                      });
                      if (false) {
                        var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers;
                      }
                      runModifierEffects();
                      return instance.update();
                    },
                    // Sync update – it will always be executed, even if not necessary. This
                    // is useful for low frequency updates where sync behavior simplifies the
                    // logic.
                    // For high frequency updates (e.g. `resize` and `scroll` events), always
                    // prefer the async Popper#update method
                    forceUpdate: function forceUpdate() {
                      if (isDestroyed) {
                        return;
                      }
                      var _state$elements = state.elements, reference2 = _state$elements.reference, popper2 = _state$elements.popper;
                      if (!areValidElements(reference2, popper2)) {
                        if (false) {
                        }
                        return;
                      }
                      state.rects = {
                        reference: getCompositeRect(reference2, getOffsetParent(popper2), state.options.strategy === "fixed"),
                        popper: getLayoutRect(popper2)
                      };
                      state.reset = false;
                      state.placement = state.options.placement;
                      state.orderedModifiers.forEach(function(modifier) {
                        return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
                      });
                      var __debug_loops__ = 0;
                      for (var index = 0; index < state.orderedModifiers.length; index++) {
                        if (false) {
                        }
                        if (state.reset === true) {
                          state.reset = false;
                          index = -1;
                          continue;
                        }
                        var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
                        if (typeof fn === "function") {
                          state = fn({
                            state,
                            options: _options,
                            name,
                            instance
                          }) || state;
                        }
                      }
                    },
                    // Async and optimistically optimized update – it will not be executed if
                    // not necessary (debounced to run at most once-per-tick)
                    update: debounce(function() {
                      return new Promise(function(resolve) {
                        instance.forceUpdate();
                        resolve(state);
                      });
                    }),
                    destroy: function destroy() {
                      cleanupModifierEffects();
                      isDestroyed = true;
                    }
                  };
                  if (!areValidElements(reference, popper)) {
                    if (false) {
                    }
                    return instance;
                  }
                  instance.setOptions(options).then(function(state2) {
                    if (!isDestroyed && options.onFirstUpdate) {
                      options.onFirstUpdate(state2);
                    }
                  });
                  function runModifierEffects() {
                    state.orderedModifiers.forEach(function(_ref3) {
                      var name = _ref3.name, _ref3$options = _ref3.options, options2 = _ref3$options === void 0 ? {} : _ref3$options, effect2 = _ref3.effect;
                      if (typeof effect2 === "function") {
                        var cleanupFn = effect2({
                          state,
                          name,
                          instance,
                          options: options2
                        });
                        var noopFn = function noopFn2() {
                        };
                        effectCleanupFns.push(cleanupFn || noopFn);
                      }
                    });
                  }
                  function cleanupModifierEffects() {
                    effectCleanupFns.forEach(function(fn) {
                      return fn();
                    });
                    effectCleanupFns = [];
                  }
                  return instance;
                };
              }
              var createPopper_createPopper = popperGenerator();
              var passive = {
                passive: true
              };
              function effect(_ref) {
                var state = _ref.state, instance = _ref.instance, options = _ref.options;
                var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
                var window2 = getWindow(state.elements.popper);
                var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
                if (scroll) {
                  scrollParents.forEach(function(scrollParent) {
                    scrollParent.addEventListener("scroll", instance.update, passive);
                  });
                }
                if (resize) {
                  window2.addEventListener("resize", instance.update, passive);
                }
                return function() {
                  if (scroll) {
                    scrollParents.forEach(function(scrollParent) {
                      scrollParent.removeEventListener("scroll", instance.update, passive);
                    });
                  }
                  if (resize) {
                    window2.removeEventListener("resize", instance.update, passive);
                  }
                };
              }
              var eventListeners = {
                name: "eventListeners",
                enabled: true,
                phase: "write",
                fn: function fn() {
                },
                effect,
                data: {}
              };
              function getBasePlacement(placement) {
                return placement.split("-")[0];
              }
              function getVariation(placement) {
                return placement.split("-")[1];
              }
              function getMainAxisFromPlacement(placement) {
                return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
              }
              function computeOffsets(_ref) {
                var reference = _ref.reference, element = _ref.element, placement = _ref.placement;
                var basePlacement = placement ? getBasePlacement(placement) : null;
                var variation = placement ? getVariation(placement) : null;
                var commonX = reference.x + reference.width / 2 - element.width / 2;
                var commonY = reference.y + reference.height / 2 - element.height / 2;
                var offsets;
                switch (basePlacement) {
                  case enums_top:
                    offsets = {
                      x: commonX,
                      y: reference.y - element.height
                    };
                    break;
                  case bottom:
                    offsets = {
                      x: commonX,
                      y: reference.y + reference.height
                    };
                    break;
                  case right:
                    offsets = {
                      x: reference.x + reference.width,
                      y: commonY
                    };
                    break;
                  case left:
                    offsets = {
                      x: reference.x - element.width,
                      y: commonY
                    };
                    break;
                  default:
                    offsets = {
                      x: reference.x,
                      y: reference.y
                    };
                }
                var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
                if (mainAxis != null) {
                  var len = mainAxis === "y" ? "height" : "width";
                  switch (variation) {
                    case enums_start:
                      offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
                      break;
                    case end:
                      offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
                      break;
                    default:
                  }
                }
                return offsets;
              }
              function popperOffsets_popperOffsets(_ref) {
                var state = _ref.state, name = _ref.name;
                state.modifiersData[name] = computeOffsets({
                  reference: state.rects.reference,
                  element: state.rects.popper,
                  strategy: "absolute",
                  placement: state.placement
                });
              }
              var modifiers_popperOffsets = {
                name: "popperOffsets",
                enabled: true,
                phase: "read",
                fn: popperOffsets_popperOffsets,
                data: {}
              };
              var math_max = Math.max;
              var math_min = Math.min;
              var round = Math.round;
              var unsetSides = {
                top: "auto",
                right: "auto",
                bottom: "auto",
                left: "auto"
              };
              function roundOffsetsByDPR(_ref) {
                var x = _ref.x, y = _ref.y;
                var win = window;
                var dpr = win.devicePixelRatio || 1;
                return {
                  x: round(round(x * dpr) / dpr) || 0,
                  y: round(round(y * dpr) / dpr) || 0
                };
              }
              function mapToStyles(_ref2) {
                var _Object$assign2;
                var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets;
                var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === "function" ? roundOffsets(offsets) : offsets, _ref3$x = _ref3.x, x = _ref3$x === void 0 ? 0 : _ref3$x, _ref3$y = _ref3.y, y = _ref3$y === void 0 ? 0 : _ref3$y;
                var hasX = offsets.hasOwnProperty("x");
                var hasY = offsets.hasOwnProperty("y");
                var sideX = left;
                var sideY = enums_top;
                var win = window;
                if (adaptive) {
                  var offsetParent = getOffsetParent(popper);
                  var heightProp = "clientHeight";
                  var widthProp = "clientWidth";
                  if (offsetParent === getWindow(popper)) {
                    offsetParent = getDocumentElement(popper);
                    if (getComputedStyle(offsetParent).position !== "static") {
                      heightProp = "scrollHeight";
                      widthProp = "scrollWidth";
                    }
                  }
                  offsetParent = offsetParent;
                  if (placement === enums_top) {
                    sideY = bottom;
                    y -= offsetParent[heightProp] - popperRect.height;
                    y *= gpuAcceleration ? 1 : -1;
                  }
                  if (placement === left) {
                    sideX = right;
                    x -= offsetParent[widthProp] - popperRect.width;
                    x *= gpuAcceleration ? 1 : -1;
                  }
                }
                var commonStyles = Object.assign({
                  position
                }, adaptive && unsetSides);
                if (gpuAcceleration) {
                  var _Object$assign;
                  return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
                }
                return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
              }
              function computeStyles(_ref4) {
                var state = _ref4.state, options = _ref4.options;
                var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
                if (false) {
                  var transitionProperty;
                }
                var commonStyles = {
                  placement: getBasePlacement(state.placement),
                  popper: state.elements.popper,
                  popperRect: state.rects.popper,
                  gpuAcceleration
                };
                if (state.modifiersData.popperOffsets != null) {
                  state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
                    offsets: state.modifiersData.popperOffsets,
                    position: state.options.strategy,
                    adaptive,
                    roundOffsets
                  })));
                }
                if (state.modifiersData.arrow != null) {
                  state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
                    offsets: state.modifiersData.arrow,
                    position: "absolute",
                    adaptive: false,
                    roundOffsets
                  })));
                }
                state.attributes.popper = Object.assign({}, state.attributes.popper, {
                  "data-popper-placement": state.placement
                });
              }
              var modifiers_computeStyles = {
                name: "computeStyles",
                enabled: true,
                phase: "beforeWrite",
                fn: computeStyles,
                data: {}
              };
              function applyStyles(_ref) {
                var state = _ref.state;
                Object.keys(state.elements).forEach(function(name) {
                  var style = state.styles[name] || {};
                  var attributes = state.attributes[name] || {};
                  var element = state.elements[name];
                  if (!isHTMLElement(element) || !getNodeName(element)) {
                    return;
                  }
                  Object.assign(element.style, style);
                  Object.keys(attributes).forEach(function(name2) {
                    var value = attributes[name2];
                    if (value === false) {
                      element.removeAttribute(name2);
                    } else {
                      element.setAttribute(name2, value === true ? "" : value);
                    }
                  });
                });
              }
              function applyStyles_effect(_ref2) {
                var state = _ref2.state;
                var initialStyles = {
                  popper: {
                    position: state.options.strategy,
                    left: "0",
                    top: "0",
                    margin: "0"
                  },
                  arrow: {
                    position: "absolute"
                  },
                  reference: {}
                };
                Object.assign(state.elements.popper.style, initialStyles.popper);
                state.styles = initialStyles;
                if (state.elements.arrow) {
                  Object.assign(state.elements.arrow.style, initialStyles.arrow);
                }
                return function() {
                  Object.keys(state.elements).forEach(function(name) {
                    var element = state.elements[name];
                    var attributes = state.attributes[name] || {};
                    var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
                    var style = styleProperties.reduce(function(style2, property) {
                      style2[property] = "";
                      return style2;
                    }, {});
                    if (!isHTMLElement(element) || !getNodeName(element)) {
                      return;
                    }
                    Object.assign(element.style, style);
                    Object.keys(attributes).forEach(function(attribute) {
                      element.removeAttribute(attribute);
                    });
                  });
                };
              }
              var modifiers_applyStyles = {
                name: "applyStyles",
                enabled: true,
                phase: "write",
                fn: applyStyles,
                effect: applyStyles_effect,
                requires: ["computeStyles"]
              };
              function distanceAndSkiddingToXY(placement, rects, offset) {
                var basePlacement = getBasePlacement(placement);
                var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;
                var _ref = typeof offset === "function" ? offset(Object.assign({}, rects, {
                  placement
                })) : offset, skidding = _ref[0], distance = _ref[1];
                skidding = skidding || 0;
                distance = (distance || 0) * invertDistance;
                return [left, right].indexOf(basePlacement) >= 0 ? {
                  x: distance,
                  y: skidding
                } : {
                  x: skidding,
                  y: distance
                };
              }
              function offset_offset(_ref2) {
                var state = _ref2.state, options = _ref2.options, name = _ref2.name;
                var _options$offset = options.offset, offset = _options$offset === void 0 ? [0, 0] : _options$offset;
                var data = enums_placements.reduce(function(acc, placement) {
                  acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
                  return acc;
                }, {});
                var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
                if (state.modifiersData.popperOffsets != null) {
                  state.modifiersData.popperOffsets.x += x;
                  state.modifiersData.popperOffsets.y += y;
                }
                state.modifiersData[name] = data;
              }
              var modifiers_offset = {
                name: "offset",
                enabled: true,
                phase: "main",
                requires: ["popperOffsets"],
                fn: offset_offset
              };
              var hash = {
                left: "right",
                right: "left",
                bottom: "top",
                top: "bottom"
              };
              function getOppositePlacement(placement) {
                return placement.replace(/left|right|bottom|top/g, function(matched) {
                  return hash[matched];
                });
              }
              var getOppositeVariationPlacement_hash = {
                start: "end",
                end: "start"
              };
              function getOppositeVariationPlacement(placement) {
                return placement.replace(/start|end/g, function(matched) {
                  return getOppositeVariationPlacement_hash[matched];
                });
              }
              function getViewportRect(element) {
                var win = getWindow(element);
                var html = getDocumentElement(element);
                var visualViewport = win.visualViewport;
                var width = html.clientWidth;
                var height = html.clientHeight;
                var x = 0;
                var y = 0;
                if (visualViewport) {
                  width = visualViewport.width;
                  height = visualViewport.height;
                  if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
                    x = visualViewport.offsetLeft;
                    y = visualViewport.offsetTop;
                  }
                }
                return {
                  width,
                  height,
                  x: x + getWindowScrollBarX(element),
                  y
                };
              }
              function getDocumentRect(element) {
                var _element$ownerDocumen;
                var html = getDocumentElement(element);
                var winScroll = getWindowScroll(element);
                var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
                var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
                var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
                var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
                var y = -winScroll.scrollTop;
                if (getComputedStyle(body || html).direction === "rtl") {
                  x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;
                }
                return {
                  width,
                  height,
                  x,
                  y
                };
              }
              function contains(parent, child) {
                var rootNode = child.getRootNode && child.getRootNode();
                if (parent.contains(child)) {
                  return true;
                } else if (rootNode && isShadowRoot(rootNode)) {
                  var next = child;
                  do {
                    if (next && parent.isSameNode(next)) {
                      return true;
                    }
                    next = next.parentNode || next.host;
                  } while (next);
                }
                return false;
              }
              function rectToClientRect(rect) {
                return Object.assign({}, rect, {
                  left: rect.x,
                  top: rect.y,
                  right: rect.x + rect.width,
                  bottom: rect.y + rect.height
                });
              }
              function getInnerBoundingClientRect(element) {
                var rect = getBoundingClientRect(element);
                rect.top = rect.top + element.clientTop;
                rect.left = rect.left + element.clientLeft;
                rect.bottom = rect.top + element.clientHeight;
                rect.right = rect.left + element.clientWidth;
                rect.width = element.clientWidth;
                rect.height = element.clientHeight;
                rect.x = rect.left;
                rect.y = rect.top;
                return rect;
              }
              function getClientRectFromMixedType(element, clippingParent) {
                return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
              }
              function getClippingParents(element) {
                var clippingParents = listScrollParents(getParentNode(element));
                var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle(element).position) >= 0;
                var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
                if (!isElement(clipperElement)) {
                  return [];
                }
                return clippingParents.filter(function(clippingParent) {
                  return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
                });
              }
              function getClippingRect(element, boundary, rootBoundary) {
                var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
                var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
                var firstClippingParent = clippingParents[0];
                var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {
                  var rect = getClientRectFromMixedType(element, clippingParent);
                  accRect.top = math_max(rect.top, accRect.top);
                  accRect.right = math_min(rect.right, accRect.right);
                  accRect.bottom = math_min(rect.bottom, accRect.bottom);
                  accRect.left = math_max(rect.left, accRect.left);
                  return accRect;
                }, getClientRectFromMixedType(element, firstClippingParent));
                clippingRect.width = clippingRect.right - clippingRect.left;
                clippingRect.height = clippingRect.bottom - clippingRect.top;
                clippingRect.x = clippingRect.left;
                clippingRect.y = clippingRect.top;
                return clippingRect;
              }
              function getFreshSideObject() {
                return {
                  top: 0,
                  right: 0,
                  bottom: 0,
                  left: 0
                };
              }
              function mergePaddingObject(paddingObject) {
                return Object.assign({}, getFreshSideObject(), paddingObject);
              }
              function expandToHashMap(value, keys) {
                return keys.reduce(function(hashMap, key) {
                  hashMap[key] = value;
                  return hashMap;
                }, {});
              }
              function detectOverflow(state, options) {
                if (options === void 0) {
                  options = {};
                }
                var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? enums_clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? enums_popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
                var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
                var altContext = elementContext === enums_popper ? enums_reference : enums_popper;
                var referenceElement = state.elements.reference;
                var popperRect = state.rects.popper;
                var element = state.elements[altBoundary ? altContext : elementContext];
                var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
                var referenceClientRect = getBoundingClientRect(referenceElement);
                var popperOffsets = computeOffsets({
                  reference: referenceClientRect,
                  element: popperRect,
                  strategy: "absolute",
                  placement
                });
                var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
                var elementClientRect = elementContext === enums_popper ? popperClientRect : referenceClientRect;
                var overflowOffsets = {
                  top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
                  bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
                  left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
                  right: elementClientRect.right - clippingClientRect.right + paddingObject.right
                };
                var offsetData = state.modifiersData.offset;
                if (elementContext === enums_popper && offsetData) {
                  var offset = offsetData[placement];
                  Object.keys(overflowOffsets).forEach(function(key) {
                    var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
                    var axis = [enums_top, bottom].indexOf(key) >= 0 ? "y" : "x";
                    overflowOffsets[key] += offset[axis] * multiply;
                  });
                }
                return overflowOffsets;
              }
              function computeAutoPlacement(state, options) {
                if (options === void 0) {
                  options = {};
                }
                var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;
                var variation = getVariation(placement);
                var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
                  return getVariation(placement2) === variation;
                }) : basePlacements;
                var allowedPlacements = placements.filter(function(placement2) {
                  return allowedAutoPlacements.indexOf(placement2) >= 0;
                });
                if (allowedPlacements.length === 0) {
                  allowedPlacements = placements;
                  if (false) {
                  }
                }
                var overflows = allowedPlacements.reduce(function(acc, placement2) {
                  acc[placement2] = detectOverflow(state, {
                    placement: placement2,
                    boundary,
                    rootBoundary,
                    padding
                  })[getBasePlacement(placement2)];
                  return acc;
                }, {});
                return Object.keys(overflows).sort(function(a, b) {
                  return overflows[a] - overflows[b];
                });
              }
              function getExpandedFallbackPlacements(placement) {
                if (getBasePlacement(placement) === auto) {
                  return [];
                }
                var oppositePlacement = getOppositePlacement(placement);
                return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
              }
              function flip(_ref) {
                var state = _ref.state, options = _ref.options, name = _ref.name;
                if (state.modifiersData[name]._skip) {
                  return;
                }
                var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
                var preferredPlacement = state.options.placement;
                var basePlacement = getBasePlacement(preferredPlacement);
                var isBasePlacement = basePlacement === preferredPlacement;
                var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
                var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
                  return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
                    placement: placement2,
                    boundary,
                    rootBoundary,
                    padding,
                    flipVariations,
                    allowedAutoPlacements
                  }) : placement2);
                }, []);
                var referenceRect = state.rects.reference;
                var popperRect = state.rects.popper;
                var checksMap = /* @__PURE__ */ new Map();
                var makeFallbackChecks = true;
                var firstFittingPlacement = placements[0];
                for (var i = 0; i < placements.length; i++) {
                  var placement = placements[i];
                  var _basePlacement = getBasePlacement(placement);
                  var isStartVariation = getVariation(placement) === enums_start;
                  var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;
                  var len = isVertical ? "width" : "height";
                  var overflow = detectOverflow(state, {
                    placement,
                    boundary,
                    rootBoundary,
                    altBoundary,
                    padding
                  });
                  var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;
                  if (referenceRect[len] > popperRect[len]) {
                    mainVariationSide = getOppositePlacement(mainVariationSide);
                  }
                  var altVariationSide = getOppositePlacement(mainVariationSide);
                  var checks = [];
                  if (checkMainAxis) {
                    checks.push(overflow[_basePlacement] <= 0);
                  }
                  if (checkAltAxis) {
                    checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
                  }
                  if (checks.every(function(check) {
                    return check;
                  })) {
                    firstFittingPlacement = placement;
                    makeFallbackChecks = false;
                    break;
                  }
                  checksMap.set(placement, checks);
                }
                if (makeFallbackChecks) {
                  var numberOfChecks = flipVariations ? 3 : 1;
                  var _loop = function _loop2(_i2) {
                    var fittingPlacement = placements.find(function(placement2) {
                      var checks2 = checksMap.get(placement2);
                      if (checks2) {
                        return checks2.slice(0, _i2).every(function(check) {
                          return check;
                        });
                      }
                    });
                    if (fittingPlacement) {
                      firstFittingPlacement = fittingPlacement;
                      return "break";
                    }
                  };
                  for (var _i = numberOfChecks; _i > 0; _i--) {
                    var _ret = _loop(_i);
                    if (_ret === "break")
                      break;
                  }
                }
                if (state.placement !== firstFittingPlacement) {
                  state.modifiersData[name]._skip = true;
                  state.placement = firstFittingPlacement;
                  state.reset = true;
                }
              }
              var modifiers_flip = {
                name: "flip",
                enabled: true,
                phase: "main",
                fn: flip,
                requiresIfExists: ["offset"],
                data: {
                  _skip: false
                }
              };
              function getAltAxis(axis) {
                return axis === "x" ? "y" : "x";
              }
              function within(min, value, max) {
                return math_max(min, math_min(value, max));
              }
              function preventOverflow(_ref) {
                var state = _ref.state, options = _ref.options, name = _ref.name;
                var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
                var overflow = detectOverflow(state, {
                  boundary,
                  rootBoundary,
                  padding,
                  altBoundary
                });
                var basePlacement = getBasePlacement(state.placement);
                var variation = getVariation(state.placement);
                var isBasePlacement = !variation;
                var mainAxis = getMainAxisFromPlacement(basePlacement);
                var altAxis = getAltAxis(mainAxis);
                var popperOffsets = state.modifiersData.popperOffsets;
                var referenceRect = state.rects.reference;
                var popperRect = state.rects.popper;
                var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
                  placement: state.placement
                })) : tetherOffset;
                var data = {
                  x: 0,
                  y: 0
                };
                if (!popperOffsets) {
                  return;
                }
                if (checkMainAxis || checkAltAxis) {
                  var mainSide = mainAxis === "y" ? enums_top : left;
                  var altSide = mainAxis === "y" ? bottom : right;
                  var len = mainAxis === "y" ? "height" : "width";
                  var offset = popperOffsets[mainAxis];
                  var min = popperOffsets[mainAxis] + overflow[mainSide];
                  var max = popperOffsets[mainAxis] - overflow[altSide];
                  var additive = tether ? -popperRect[len] / 2 : 0;
                  var minLen = variation === enums_start ? referenceRect[len] : popperRect[len];
                  var maxLen = variation === enums_start ? -popperRect[len] : -referenceRect[len];
                  var arrowElement = state.elements.arrow;
                  var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
                    width: 0,
                    height: 0
                  };
                  var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
                  var arrowPaddingMin = arrowPaddingObject[mainSide];
                  var arrowPaddingMax = arrowPaddingObject[altSide];
                  var arrowLen = within(0, referenceRect[len], arrowRect[len]);
                  var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
                  var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
                  var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
                  var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
                  var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
                  var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
                  var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;
                  if (checkMainAxis) {
                    var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);
                    popperOffsets[mainAxis] = preventedOffset;
                    data[mainAxis] = preventedOffset - offset;
                  }
                  if (checkAltAxis) {
                    var _mainSide = mainAxis === "x" ? enums_top : left;
                    var _altSide = mainAxis === "x" ? bottom : right;
                    var _offset = popperOffsets[altAxis];
                    var _min = _offset + overflow[_mainSide];
                    var _max = _offset - overflow[_altSide];
                    var _preventedOffset = within(tether ? math_min(_min, tetherMin) : _min, _offset, tether ? math_max(_max, tetherMax) : _max);
                    popperOffsets[altAxis] = _preventedOffset;
                    data[altAxis] = _preventedOffset - _offset;
                  }
                }
                state.modifiersData[name] = data;
              }
              var modifiers_preventOverflow = {
                name: "preventOverflow",
                enabled: true,
                phase: "main",
                fn: preventOverflow,
                requiresIfExists: ["offset"]
              };
              var arrow_toPaddingObject = function toPaddingObject(padding, state) {
                padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
                  placement: state.placement
                })) : padding;
                return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
              };
              function arrow(_ref) {
                var _state$modifiersData$;
                var state = _ref.state, name = _ref.name, options = _ref.options;
                var arrowElement = state.elements.arrow;
                var popperOffsets = state.modifiersData.popperOffsets;
                var basePlacement = getBasePlacement(state.placement);
                var axis = getMainAxisFromPlacement(basePlacement);
                var isVertical = [left, right].indexOf(basePlacement) >= 0;
                var len = isVertical ? "height" : "width";
                if (!arrowElement || !popperOffsets) {
                  return;
                }
                var paddingObject = arrow_toPaddingObject(options.padding, state);
                var arrowRect = getLayoutRect(arrowElement);
                var minProp = axis === "y" ? enums_top : left;
                var maxProp = axis === "y" ? bottom : right;
                var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
                var startDiff = popperOffsets[axis] - state.rects.reference[axis];
                var arrowOffsetParent = getOffsetParent(arrowElement);
                var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
                var centerToReference = endDiff / 2 - startDiff / 2;
                var min = paddingObject[minProp];
                var max = clientSize - arrowRect[len] - paddingObject[maxProp];
                var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
                var offset = within(min, center, max);
                var axisProp = axis;
                state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
              }
              function arrow_effect(_ref2) {
                var state = _ref2.state, options = _ref2.options;
                var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
                if (arrowElement == null) {
                  return;
                }
                if (typeof arrowElement === "string") {
                  arrowElement = state.elements.popper.querySelector(arrowElement);
                  if (!arrowElement) {
                    return;
                  }
                }
                if (false) {
                }
                if (!contains(state.elements.popper, arrowElement)) {
                  if (false) {
                  }
                  return;
                }
                state.elements.arrow = arrowElement;
              }
              var modifiers_arrow = {
                name: "arrow",
                enabled: true,
                phase: "main",
                fn: arrow,
                effect: arrow_effect,
                requires: ["popperOffsets"],
                requiresIfExists: ["preventOverflow"]
              };
              function getSideOffsets(overflow, rect, preventedOffsets) {
                if (preventedOffsets === void 0) {
                  preventedOffsets = {
                    x: 0,
                    y: 0
                  };
                }
                return {
                  top: overflow.top - rect.height - preventedOffsets.y,
                  right: overflow.right - rect.width + preventedOffsets.x,
                  bottom: overflow.bottom - rect.height + preventedOffsets.y,
                  left: overflow.left - rect.width - preventedOffsets.x
                };
              }
              function isAnySideFullyClipped(overflow) {
                return [enums_top, right, bottom, left].some(function(side) {
                  return overflow[side] >= 0;
                });
              }
              function hide(_ref) {
                var state = _ref.state, name = _ref.name;
                var referenceRect = state.rects.reference;
                var popperRect = state.rects.popper;
                var preventedOffsets = state.modifiersData.preventOverflow;
                var referenceOverflow = detectOverflow(state, {
                  elementContext: "reference"
                });
                var popperAltOverflow = detectOverflow(state, {
                  altBoundary: true
                });
                var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
                var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
                var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
                var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
                state.modifiersData[name] = {
                  referenceClippingOffsets,
                  popperEscapeOffsets,
                  isReferenceHidden,
                  hasPopperEscaped
                };
                state.attributes.popper = Object.assign({}, state.attributes.popper, {
                  "data-popper-reference-hidden": isReferenceHidden,
                  "data-popper-escaped": hasPopperEscaped
                });
              }
              var modifiers_hide = {
                name: "hide",
                enabled: true,
                phase: "main",
                requiresIfExists: ["preventOverflow"],
                fn: hide
              };
              var popper_defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];
              var popper_createPopper = popperGenerator({
                defaultModifiers: popper_defaultModifiers
              });
              var easeInOutQuad = function easeInOutQuad2(t, b, c, d) {
                t /= d / 2;
                if (t < 1)
                  return c / 2 * t * t + b;
                t--;
                return -c / 2 * (t * (t - 2) - 1) + b;
              };
              var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
                return typeof obj;
              } : function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
              };
              var jumper = function jumper2() {
                var element = void 0;
                var start = void 0;
                var stop = void 0;
                var offset = void 0;
                var easing = void 0;
                var a11y = void 0;
                var distance = void 0;
                var duration = void 0;
                var timeStart = void 0;
                var timeElapsed = void 0;
                var next = void 0;
                var callback = void 0;
                function location() {
                  return window.scrollY || window.pageYOffset;
                }
                function top(element2) {
                  return element2.getBoundingClientRect().top + start;
                }
                function loop(timeCurrent) {
                  if (!timeStart) {
                    timeStart = timeCurrent;
                  }
                  timeElapsed = timeCurrent - timeStart;
                  next = easing(timeElapsed, start, distance, duration);
                  window.scrollTo(0, next);
                  timeElapsed < duration ? window.requestAnimationFrame(loop) : done();
                }
                function done() {
                  window.scrollTo(0, start + distance);
                  if (element && a11y) {
                    element.setAttribute("tabindex", "-1");
                    element.focus();
                  }
                  if (typeof callback === "function") {
                    callback();
                  }
                  timeStart = false;
                }
                function jump(target) {
                  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  duration = options.duration || 1e3;
                  offset = options.offset || 0;
                  callback = options.callback;
                  easing = options.easing || easeInOutQuad;
                  a11y = options.a11y || false;
                  start = location();
                  switch (typeof target === "undefined" ? "undefined" : _typeof(target)) {
                    case "number":
                      element = void 0;
                      a11y = false;
                      stop = start + target;
                      break;
                    case "object":
                      element = target;
                      stop = top(element);
                      break;
                    case "string":
                      element = document.querySelector(target);
                      stop = top(element);
                      break;
                  }
                  distance = stop - start + offset;
                  switch (_typeof(options.duration)) {
                    case "number":
                      duration = options.duration;
                      break;
                    case "function":
                      duration = options.duration(distance);
                      break;
                  }
                  window.requestAnimationFrame(loop);
                }
                return jump;
              };
              var singleton = jumper();
              var jump_module = singleton;
              var hash_sum = __webpack_require__("8634");
              var hash_sum_default = __webpack_require__.n(hash_sum);
              var VStepvue_type_script_lang_js_ = {
                name: "v-step",
                props: {
                  step: {
                    type: Object
                  },
                  previousStep: {
                    type: Function
                  },
                  nextStep: {
                    type: Function
                  },
                  stop: {
                    type: Function
                  },
                  skip: {
                    type: Function,
                    default: function _default() {
                      this.stop();
                    }
                  },
                  finish: {
                    type: Function,
                    default: function _default() {
                      this.stop();
                    }
                  },
                  isFirst: {
                    type: Boolean
                  },
                  isLast: {
                    type: Boolean
                  },
                  labels: {
                    type: Object
                  },
                  enabledButtons: {
                    type: Object
                  },
                  highlight: {
                    type: Boolean
                  },
                  stopOnFail: {
                    type: Boolean
                  },
                  debug: {
                    type: Boolean
                  }
                },
                data: function data() {
                  return {
                    hash: hash_sum_default()(this.step.target),
                    targetElement: document.querySelector(this.step.target)
                  };
                },
                computed: {
                  params: function params() {
                    return _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, DEFAULT_STEP_OPTIONS), {
                      highlight: this.highlight
                    }), {
                      enabledButtons: Object.assign({}, this.enabledButtons)
                    }), this.step.params);
                  },
                  /**
                   * A step is considered sticky if it has no target.
                   */
                  isSticky: function isSticky() {
                    return !this.step.target;
                  }
                },
                methods: {
                  createStep: function createStep() {
                    if (this.debug) {
                      console.log("[Vue Tour] The target element " + this.step.target + ' of .v-step[id="' + this.hash + '"] is:', this.targetElement);
                    }
                    if (this.isSticky) {
                      document.body.appendChild(this.$refs["v-step-" + this.hash]);
                    } else {
                      if (this.targetElement) {
                        this.enableScrolling();
                        this.createHighlight();
                        popper_createPopper(this.targetElement, this.$refs["v-step-" + this.hash], this.params);
                      } else {
                        if (this.debug) {
                          console.error("[Vue Tour] The target element " + this.step.target + ' of .v-step[id="' + this.hash + '"] does not exist!');
                        }
                        this.$emit("targetNotFound", this.step);
                        if (this.stopOnFail) {
                          this.stop();
                        }
                      }
                    }
                  },
                  enableScrolling: function enableScrolling() {
                    if (this.params.enableScrolling) {
                      if (this.step.duration || this.step.offset) {
                        var jumpOptions = {
                          duration: this.step.duration || 1e3,
                          offset: this.step.offset || 0,
                          callback: void 0,
                          a11y: false
                        };
                        jump_module(this.targetElement, jumpOptions);
                      } else {
                        this.targetElement.scrollIntoView({
                          behavior: "smooth"
                        });
                      }
                    }
                  },
                  isHighlightEnabled: function isHighlightEnabled() {
                    if (this.debug) {
                      console.log("[Vue Tour] Highlight is ".concat(this.params.highlight ? "enabled" : "disabled", ' for .v-step[id="').concat(this.hash, '"]'));
                    }
                    return this.params.highlight;
                  },
                  createHighlight: function createHighlight() {
                    if (this.isHighlightEnabled()) {
                      document.body.classList.add(HIGHLIGHT.classes.active);
                      var transitionValue = window.getComputedStyle(this.targetElement).getPropertyValue("transition");
                      if (transitionValue !== "all 0s ease 0s") {
                        this.targetElement.style.transition = "".concat(transitionValue, ", ").concat(HIGHLIGHT.transition);
                      }
                      this.targetElement.classList.add(HIGHLIGHT.classes.targetHighlighted);
                      if (!this.targetElement.style.position) {
                        this.targetElement.classList.add(HIGHLIGHT.classes.targetRelative);
                      }
                    } else {
                      document.body.classList.remove(HIGHLIGHT.classes.active);
                    }
                  },
                  removeHighlight: function removeHighlight() {
                    if (this.isHighlightEnabled()) {
                      var target = this.targetElement;
                      var currentTransition = this.targetElement.style.transition;
                      this.targetElement.classList.remove(HIGHLIGHT.classes.targetHighlighted);
                      this.targetElement.classList.remove(HIGHLIGHT.classes.targetRelative);
                      if (currentTransition.includes(HIGHLIGHT.transition)) {
                        setTimeout(function() {
                          target.style.transition = currentTransition.replace(", ".concat(HIGHLIGHT.transition), "");
                        }, 0);
                      }
                    }
                  },
                  isButtonEnabled: function isButtonEnabled(name) {
                    return this.params.enabledButtons.hasOwnProperty(name) ? this.params.enabledButtons[name] : true;
                  }
                },
                mounted: function mounted() {
                  this.createStep();
                },
                destroyed: function destroyed() {
                  this.removeHighlight();
                }
              };
              var components_VStepvue_type_script_lang_js_ = VStepvue_type_script_lang_js_;
              var VStepvue_type_style_index_0_id_54f9a632_lang_scss_scoped_true_ = __webpack_require__("e330");
              var VStep_component = normalizeComponent(
                components_VStepvue_type_script_lang_js_,
                VStepvue_type_template_id_54f9a632_scoped_true_render,
                VStepvue_type_template_id_54f9a632_scoped_true_staticRenderFns,
                false,
                null,
                "54f9a632",
                null
              );
              var VStep = VStep_component.exports;
              var VueTour = {
                install: function install(Vue, options) {
                  Vue.component(VTour.name, VTour);
                  Vue.component(VStep.name, VStep);
                  Vue.prototype.$tours = {};
                }
              };
              var src_main = VueTour;
              if (typeof window !== "undefined" && window.Vue) {
                window.Vue.use(VueTour);
              }
              var entry_lib = __webpack_exports__["default"] = src_main;
            }
          ),
          /***/
          "fc6a": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var IndexedObject = __webpack_require__("44ad");
              var requireObjectCoercible = __webpack_require__("1d80");
              module2.exports = function(it) {
                return IndexedObject(requireObjectCoercible(it));
              };
            }
          ),
          /***/
          "fdbc": (
            /***/
            function(module2, exports2) {
              module2.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
              };
            }
          ),
          /***/
          "fdbf": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var NATIVE_SYMBOL = __webpack_require__("4930");
              module2.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == "symbol";
            }
          ),
          /***/
          "fea9": (
            /***/
            function(module2, exports2, __webpack_require__) {
              var global = __webpack_require__("da84");
              module2.exports = global.Promise;
            }
          )
          /******/
        })
      );
    });
  }
});
export default require_vue_tour_umd();
//# sourceMappingURL=vue-tour.js.map
